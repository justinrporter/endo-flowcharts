%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 373.000000 589.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.6 (Build 16G29) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 94 148
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 94 148
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue-Light
%!FontType1-1.0: HelveticaNeue-Light 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-Light def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /P put
dup 34 /u put
dup 35 /b put
dup 36 /e put
dup 37 /r put
dup 38 /t put
dup 39 /a put
dup 40 /l put
dup 41 /space put
dup 42 /D put
dup 43 /y put
dup 44 /E put
dup 45 /v put
dup 46 /f put
dup 47 /o put
dup 48 /H put
dup 49 /p put
dup 50 /h put
dup 51 /i put
dup 52 /d put
dup 53 /s put
dup 54 /m put
dup 55 /comma put
dup 56 /C put
dup 57 /n put
dup 58 /c put
dup 59 /N put
dup 60 /z put
dup 61 /x put
dup 62 /w put
dup 63 /g put
dup 64 /M put
dup 65 /S put
dup 66 /I put
dup 67 /G put
dup 68 /F put
dup 69 /hyphen put
dup 70 /one put
dup 71 /parenleft put
dup 72 /slash put
dup 73 /fi put
dup 74 /parenright put
dup 75 /K put
dup 76 /T put
dup 77 /quoteright put
dup 78 /four put
dup 79 /five put
dup 80 /X put
dup 81 /R put
dup 82 /k put
dup 83 /colon put
dup 84 /A put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -430 1 index div -305 2 index div 1987 3 index div 1163 5 -1 roll div]cvx def
/sfnts [<










E2D687EC5F0F3CF5011903E800000000B643F94800000000D34D85B3FE52FECF07C3048B0000000900020000000000000001000003C7FF2B001D08B1FE52FF2007C300010000000000000000000000000000003601F400320116000000F1003300F100000116005D0172003C014DFFF4022C0061022C001E022C0024011600610276FFFA02C0002602AD0048025100480219004802E5002602C0004800DE004D028800480335004602C0004702760048029B004802760021022CFFFC023EFFF502070020023E003C02070022023E00260207002201030006022C00220219003B00B9003D01F4003C00B9003D0341003C0219003B022C0022023E003C013B003C01E1001F012800070219003B01CF000202E5000801E1000101CF000201CF000F0116005E01BC00060276FFFA0000001C001C006800B800E200F6010A0132017601FE022A025402C6032A035C038A040A0446046004920514055405C00662070C07320764081E08B6092209C40A300A860B3E0B900BB60BEA0C040CA80CF40D920E280E5C0F040F620FB20FD41010103C1072109410BE1138116E0000000100000036007C000700760007000200000000001E00000200043900040001B800142B01BA0005001500162B01BF001500580048003F002400170000001C2BBF00160076005C0051003200210000001C2BBF00170068005C003F003200210000001C2BBF001800510048002F002400170000001C2BBF001900420036002F002400170000001C2B00BF00110068005C003F003200210000001C2BBF0012008E00740051004100210000001C2BBF0013007B005C0051003200210000001C2BBF0014005F0048003F003200170000001C2B00BA001A0004001B2BB8001020457D691844B8000A2B00BA00020001000C2B01BA00030003000C2B01BF000400510043003400250017000000122BBF000500580048003800280018000000122B00BF0002005F004E003D002C001A000000122BBF00030068005500430030001D000000122B00BA0006000500112BB8000120457D691844B800002B000000
00>] def
/CharStrings 54 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/comma 4 def
/hyphen 5 def
/slash 6 def
/one 7 def
/four 8 def
/five 9 def
/colon 10 def
/A 11 def
/C 12 def
/D 13 def
/E 14 def
/F 15 def
/G 16 def
/H 17 def
/I 18 def
/K 19 def
/M 20 def
/N 21 def
/P 22 def
/R 23 def
/S 24 def
/T 25 def
/X 26 def
/a 27 def
/b 28 def
/c 29 def
/d 30 def
/e 31 def
/f 32 def
/g 33 def
/h 34 def
/i 35 def
/k 36 def
/l 37 def
/m 38 def
/n 39 def
/o 40 def
/p 41 def
/r 42 def
/s 43 def
/t 44 def
/u 45 def
/v 46 def
/w 47 def
/x 48 def
/y 49 def
/z 50 def
/quoteright 51 def
/fi 52 def
/A.short01 53 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-430 -305 1987 1163}def
/UniqueID 4428012 def
currentdict currentfile eexec


B45CF14BDD6E3CCFB1224A301D8E5536210B2E914AAA42D3C7B3FFB958328C439F821777B6BB0845F584264CD34892C4DB82A967FB8B78C0C33CFF388E56CC77775CE472B6231677F69A88B0624A6E0B5F1D09A8167BE2868D947272BD6B13FC94E4A863EB949D841DEB96F12729B740A0DCCCD53373C7F364E2BBB44002927DC70942B2692D5FEEC1414A1B0472ABAC29B259D5907491D97B3AC8843536F087216E3E454C53EA92F8FBAED9066DBD86DA70A6988038280A1CAA4BF35483BFFBF21B18335E0BE2617AD2564EA1677C3EBD795E0105005205F89681728C3F76BE6AF9DE763DE5BC1198EBC079F401F217419C591A0D39AA2C34CB9F5B9A4E4A2DF0F72CB208AC64ACAEF069F37043A570A1707CD3DE235F3801E8FD67C53E4BD0877B6F5F5312CE1FF1A946AB76EE57FE383C4C85C1F204DEDEF82962412B82DBA06CE7CF88788A56061560BC18537A59A879AEFA0162C023E41D49020435C12EE7AFB5AAC59892370FADB853F07F0E6687E664C6B1A33EEDC8396B986FADBDB972DFDB05148CB224A8D2D14300D30A56A8EACF55A1CED610AD55A0A09C7581B8B5F4CBA2A16F6A597981273FEA5A0679C08D32306870BC98A0B3D26DD21B96B8B5EA06CBFAA29F5945D4A4040D66DE25917EBBD1C681181BDE77170BEBE465728C22A0A59116FCFE17A74FDFF4980B7FA1B4498F8185019825366796779CED523F6CE69A4FB9703B16E4A667AB2413414CEAF4CD648F62B37F5656C1FC428859D9BC797C096C596D03E35909D8795FD4584ACBDB297660916CCA406D02D0F195634C8BA060D812F0A42F814E5715278309B9AE8474312929EEF3A1F3FE685DA36BCB684ED60E690183700B4E1A0592684EE06D7483E224C1729B4129217A5226F395E276EA3400956F98D2D32BD84886BC39449A6BCBAFE21CF9165543BF40C9D4B289D41560D2A2FD7E6504501F5CD9B507BC08162A099A76DBDF74CB6AA4DD314F33902E917D94539E8B1A8161F03EBFFC39C29340436FDC285946A914E927B1201499A1A78A4E1F2A486FE71E6B1290A63121EE97A2AAEBC33C7B1292E7E2E7D7006BF256E3C4B2A27FA4B566D2838E065E787F3878DB38101DE0D9B6144B3F4DF97CE29F8AF58818F34CEAFD27444417831C068B2CF5948AD0B4DC3D4B81E8DFF25BC54266CB97963B73F2520CDA872EFED9A4ACE00C5BE641E9E76333586B27CCC7E1EE693AA0D02940C2CB2E1D31615FE36EC19943E81C034E9629F26D0347AB9407E558FA429D84A22F0FAAACF9A377D4B59EFE5DE514C1C0916CAA6745039DFCF34DE46C258431DC070D12E7781947C27212075274B75C317995DE0B43A7961AFDCF112D312385DA1FAC8A17759335A31368F1181D7EA28414A8D7909029D5A5604F737D079019E1CD5AF6EBAE70F4067D12CB0018B2E941FA4D9A68
43D3FD3C598507CDD429C53399776E636FE373D445B682C326DFD3DF9DFC878E1B68F7F0AE2151B2C72A6B54AA2E01DCA48003DBA20F4F8CA62294A9C2F7DB4778A815BCAEAE2D7A8B64DF09BCE044B592B27477979A07353401FEE72DB23D214DBE1F6E2C13FFD233CC3916EF978B0FC2779EEB779872BEF07494FB5714C6DEFDF15E6CD881B30EAA96B1D29C7F855F077829DD2F62F9ABC724CAA18AFCFB8D0CA8B7E7AB6941E504C687D8582A88CBEEDF3D97C5437B64ECFF1FBC66C04FEEBDD2FE5C6A04D5B0E0FDDA66C779ABE6F65F91F9E181721103FCEC0A5635BA22B3DB6F6D577B20A17188DF307F0F95A4F2B41FEB9AF07C01A8EBB822670454332BCCAC48CCAE7008955B1C8A180BB4C70398E5F173962A9E63F9EE84EC94F1C6D7ED445C16460001D676959639CC26D5681988FF99ADB1A27BDC2A4CCF2C4FA111EF2D50CC4A898F05FC32DE55F806D78177DD2EB0E82847FDE0AF2AF7AF76A926CF320672E6C09310B0D7F6E78AE4F3A08438069DD1ADFF0BE25D87C945B91F218BA015999E15E87798304DD085500B58B0A4F530909F07A51BF5D8E1645CA78F9A2D60B007330EE342490506EA284733AA65F2E803A5F017A456884EDB8503451F2CD83F846444C502B2195EA2D5670281C9C1C78FCA41A961B8A8758322BFB4FD980FBA9AD74917AFB2416DB02A6093118EF20D45E5A99682471A9F933E2B99423041352D4792A9FCEFAB2656507E537BD11FF8C13D686A157A722F3848986D2DDBCBA5DCEEE36A552A29C5F4D21D03F01DD3E29740A52A00DBFF50870335D5CCD8A3C5EEB9EECAA403A983B1B416817B7A63949DDB03BBE7A90D983BDC96BE3CE87723EBDDB722750FCE149C59493FE671933B3813356B4BE70FF75C1BF555A562FA0B8732AE345D26F56A6AA7F13D9CA7019C0C202E3CB35524251BCD460603C32800B177E5BE271DE6122B36B38C30782B248CB8EDC95CDA689E5E2ACE3F2752B3E9EE912F642A2A374AF026C83BD53D5BD9371BD74F7723F9E35AEC9B9237857DED4D84DF3B12989309A6A9105BAF2E9166BFC979120F9B6DBBBED9A9CC3085B4559B52D0C30E45384E0E37E8AD4903BCC0E98BF002AD1F8E9B7F67AD52F234B9F6DBDB8DCFD23C69B241AB1CDB817872996A771A411CA19E70A1B1BFA7D8A73648FEE728681AA8FB6BC38A2283521E3A6FE73E79095DC716BD8AE454A391B261A8A29867C73940A469D8F078FACE000E54EF76B595D81037E578EAABA6B3284AC2A8AEAAFC1E66ED2B72B59CE5C02DE62C8CA465ADBB0CF03DC06AEF2F6D3311B8DE429AB763F593B2A8517E111165344BDE4E8BFE2E7C2B023759244B44C0536A7B89F138AE2D190BC3601BB60F7E01B81F67F3050DD72B0637D39630050B5283AADA2C659B7DC06E63F426764971206E08056C28CE0469DE1BC5F4

FA2595696A990A07642DB49E4F338403C4FB9C0E6C00383A7616EC8E613AB89D194581005CE044E1AB3DD4277E8ED6059EA52215CED58FF3744B805D033D9A030C13B6A93A28A19495711C296E156B073D753B4027364B794F6D50FDD5B74CB6A0DB104026A3D71B13C6127218E080966171889A3E958AAB1AB82E8EB95F183AC4EE17F2F3C520C8F66AD2E33FB9FAEE45DECC0E8C6433E16FD55AB1E2FBCAEB73FF331E5EABDBA4997AAFB661463AA37FC9A0894596F720168BDEC370FE4FF2A442BF3556F2C941D91617A743FE9D0EDA32DBC967C2A628542ECD6DA8333517D7F331557C5C53C37872F2E5482A75CCB18330066A62418887083D63DFDE675D6FB25321EABD2D6D44AD2AE8ADC20F5E3BFE585F6607C8E8B52DF45D07EC10C5977149665E7AD87219F529ABAB2C163837CD899271D64F7D171440D0131D45FBD647660D927AF9E1193262CF3B65A101D12FFA0EA8390AD98614EFE081FE8C12BC9256893D8E7FAC7B6AE7BCD0AAD1E57C463E041E548BE36D60AFF017BCA941C399434E778F35840DB4A6C2AB97143B7FBD24B7F50727D36F921352FB47EBD71854C58DA26D321346278FA56B059B7EA64D5AC97429513064A6FD675AC05181A42E0D699C78CFD08168F793E2AFEE2046ADBFD5E2DEC645627F7AA02F9857EFA199C0FDCE825AAA7DC6CC27490E2EE6AC4328C0E923DA8A7E82EF7828201E5C1BD8664302D270702574F6DBF64189604468AFFF8806FD9E3939A3A10C145AFFE74BF3F005ADF83D6F578F337544F12B58721ED52B5D5F694D5DED78611BF1D93324D7FEF11D00A0FC8AD0BDE37FB762F67246AF6976ECF6F764545E373F79AEC115D1ABD3141E015D5B6EFA31123ED31A456321C2C9EF3A9F9B711ACAAE2E9B021EC7292502359038CAEB1BED21F5B54FB6F046BC23BBC06B82F0BE60497CF9F92C4BB91F4D889155D71E81BCA34886EB0EEB404A2689D6F891BE9A08C0352C4FEE3F837B2F8C0AA56DCA4349AC7A6AC60F904A60787826B1DB8AE83FBDE3D0303EA2C695FCEAB27C0578E147A5E8516F652BBD3C90E57E1217B71D9D381AB1F0F7E01FCDDCD36509EAA934AC080661D0F1F2708D73166C295F03A5525691678BEB01B1A8B7B8FF43B95CC9F045CFCA2877A201C4FF2BEC9DAF3E50152505123D593CD923A7561FC81D21DB1ACD05F76D5FE6C55FB19435A0D02B04D4A7340C9F73C1674CE5A57D8349193CA1CB0B1B1A986CB693D4797319E5859E670B934C37410E4127C914F00FEC170D7B280FFB13C3686BB9F968C4A71786CE292D08396EC6D4652113B4B59D20A186FA7692B1EA7E31C7809091D7ABC8D30D445E5401F561134ADDF539138B1B51E956E0BC57437C1B1E7E30C7AD6AFBD25F3944955BB35D9F347A40C4D8DB393AEA40105173AEDD6DCC5153397358AEF038633C6850
3EED7C08FE206BCD3BB4D7C036A27F3CFBCA76581BE06AAEFBFDC36BFBE1406B339EDAF1EED7203DD464C0B046A2CCDD5ADAC0B980653922184E9357B0769C03EAC584EE31E2B83CC8C008D439927132778A88EB69B2D0C7C581EB7A84326197A4116ABDF7B249B617355838FCEE8E4D86D155597040BE04D3C0A6238490B47B1E1A4E7DC47818A1B74BC4F6CF2ED8F3E46322DA499522EB94F47DFADFFF4D098B35C9C87FD9333BA5052D98C3A664BE8E2C3F15E9F7979CDA37424A93FEE71499E0124AE7139031D89851BD719D3DBD0417188D99C1E57B6E93D2D966E04EB861A455A16773A5B28F8E79799935C15BDCE74B7174159E702A66F512B473CD73800A939A2C0BE0E39E4D5CA0C1960C195E7D3FF24E855360A19124353EFE27AE118D176166C3BA518E4DCA46E999FD36944BCFE044368BFDFB75BE284A0C51AFBD140358B184C943CC8DFA22CFB3B4861EBD20364F1CC3141A2626F473936CB3331595B8B698325C7EABD1B8741E6B42DFF4600603D030C9C15B07B970EE53F88FD7787B8A09C2B9D0A6859BEE03E53F565613DBFB26DA8363C62E4617F11304BB8FA257CEF0E5B49569B16C5AEBDB3450BAC7F71C8FF9BF42443E7513DB30817A93AAE87C1F4ACE66CDBAAF3B6880AB70459538BC43652B25C4981F3B8A12DBF7162A9C50E2CFDA804DA15031B7F9854B1B8012AB89623F32CDC582AC60B4A92B123AEF27D227228B1CA6E2F62424076F0ADDF4BBAC185A524CB7424171BFC06E1A92397884C7B888FC36BE18246DBC55B35DE557F7B59C1D48CDF8C5494F5922F4E8EC7491BDF0ADAA48CCAB07FF2858F6B9DAD811FD9700B9F28DD9A3CBF3FE443C2DE0FED137B0A6DD6CDB7FE475FBDCCA9F2CB43F6DDEF2C0973735044B9209A4290BA1FCA1E968AFDC2BC1340965060FAC9BB64E1C4F0A81B1247A456AEC74635DAC4AA61E8F241C78C0340B4280859A1370D7486C7D36B1301F185CE651FD7F96E692FC0209E63CE2D57EFBAFF8E921F1785BA7662EC881D8C0B496A83EB7F85136C89A90691801AC573BB38EBC9F26375DDD377AD343EA27FA1283932440E35CA0A198ADF096D77289CA6C5983D7AE0CC672BA98E114E8415C01C255650E9E3322538F0AC6AFDAC722EEB676A996379160ECC8D97077FD70A034C5B9348F3DC8AC269FA7EB976F150EA247E0C1A23C2D613E6C21B1AD6377667280E7C64634530811A96F6445A675DB674369E1A55E9FC93E6DAF42B06AC1E6987BB8772C9E6ABA6A9665A7FA56C5F38DA9B2E025DA2EB60F734534F1B59E617BFF069F0CBB51F6FA2249913211CC2B16389134ACE0DDF1D5759B6168E121504BD091A7A254B174DED6A4BB3A9F723E3C9EA37A9426A1E6664F523169730DBAB0EE7CD91C9B74FDDD6F3D2CCC8CA6FDC3084912D4EA8748B597D8C3F8D9219E4DC32D
471DFA6313B131A1794E9C5E963513DCEB30BC3A2EF9C2C91BDD3AF8EFDBA98F21235C8D93C21521CEB6A15BF3594CACB128C8E988B5FE117AC310508C5FF835A41B3B4CABAFABAB003357ABDE5FA01B58C1C1E828A6758638FEE85C045A75814235BA866ECEBCBBCBBA67F27051741EB1F7ABF3F07FAA1F08FEAFF62D8B903264015B557D86525DB2DDC22E6B2F7F04F9E340C524A694496D605231D52C54E1F0AC6DD5C3FF2DA4F07C4B1B61ACAE2D9FFC99C36F582BF3D8E113D61574EEF86E9EE3BC8D5B8023EB656CF8FCA6D6FD4F0F8C3B2357BD61BB73060109454148758763AA58C57FFEEF431B6522CF70CAD3C02792A354EF307084415A62CE6451D3157047AF64DF8836C65EA19AB2551C1F210633D30AA3EDBB1AF674DC0592282936017179CF55DA8947E5B116E6627B0DAE957A392B6ACF0CE8E000ECEEE5CF2D3293BDFA6FB8B824E0D19B8E117CBD357813497185FC53A39A4C52568D239FE20396742077DE97CF2B81EEC54DECCCB704F66910EFA5F73EAABE3BAFA6D5BB2E7C8E3C5AF8A7F28E7542190A38FA98EC18BD6AC1004F44F16EDE2A4C16ADEF60B68404FC626F8DF4B7FCE402DE95093CFB573DABD4B9ACEB44B5FDD312B5A3ECC13F950B24083994F4F60AF381226350662D6863F951E113D8EAFB11A02723A26A03847D027E41E7923EA097F1C8EFF1C047BC7146E496E60DF6B9056E48F4DD3112BC8414814DBEE3020605B3F51B9288DAC1619AEE50E0CC834FEEAD5AA2B041F18BF33BEF9CF19A72BD6B913692FB74489123D6242CFD8DE6C59918C90A8D0A200C746CB863E80AE38900768D0D29F902818E355DD296D3D1B5825FF896ED9AC718C80B0EEDAF85AEC21E52CA475D1E5FD147220CB218205E691962E0D1C3E7ECD9B94F52625C2FBDEA740C05D3C3DD1279F3E6F778FEFEA3987A49E29D0FB35A5D198ED23AA5E733A0DEAEBCB850AB48B522C40172DD175285B9084D9745BD145A2469DC4F97D0064395E0816933E59D8D5BD5294EFD82DC9BD216E3A8541F176B74C6BD23986C24603392CBE3D6DB54D4385CCCC469829E8454FDF2797AF21AB4CBAEC647A36980F891AE2F43F9A1247F9C5B0032B763D65AA3DBDA601B681723CBEE6F60997403F25A4DEE061B26BDB0E50E7C898D48E00C919650D6DA5B5700C80A3F2B1E7A7FA93566F71E57BB8BC8C655DD4772215019F6B88013C555B0AB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Light cguidfix
/F1.1/HelveticaNeue-Light renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 93.25 147.25 rc
9.5 141.125 m
17.9375 146.75 l
34.8125 146.75 l
43.25 141.125 l
34.8125 135.5 l
17.9375 135.5 l
h
9.5 141.125 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -24.25 155.75 cm
135 58.5 m
168.75 36 l
236.25 36 l
270 58.5 l
236.25 81 l
168.75 81 l
h
135 58.5 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 26.375 141.125 cm
/F1.1[ 14 0 0 -14 0 0]sf
-25.025 -3.4060974 m
(!"#$%&'\(\))[ 8.820000 7.518000 8.036000 7.266000 4.410000 4.144000 7.266000 2.590000 0.000000 ] xS
-16.597 14 m
(*$\('+)[ 9.590000 7.266000 2.590000 7.266000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -24.25 155.75 cm
202.5 81 m
202.5 116.1 l
S
0 i
CM
26.375 124.725 m
27.125 126.725 l
25.625 126.725 l
h
26.375 124.725 m
f
0 J
0 j
0.25 0 0 -0.25 -24.25 155.75 cm
202.5 124.1 m
205.5 116.1 l
199.5 116.1 l
h
202.5 124.1 m
S
1 1 1 sc
CM
0.5 95.25 m
2.5 97.25 l
50.25 97.25 l
52.25 95.25 l
52.25 85.75 l
50.25 83.75 l
2.5 83.75 l
0.5 85.75 l
h
0.5 95.25 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -24.25 155.75 cm
99 242 m
107 234 l
298 234 l
306 242 l
306 280 l
298 288 l
107 288 l
99 280 l
h
99 242 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 26.375 90.5 cm
-86.093002 -3.4060977 m
(,-'\("'&$\)./%\)0+1/&2+%/343567)[ 8.302000 6.482000 7.266000 2.590000 7.518000 7.266000 4.144000 7.266000 3.892000 3.626000 7.784000 4.410000 3.892000 9.856000 6.482000 8.036000 7.784000 4.144000 7.518000 6.482000 4.158000 7.784000 2.590000 8.036000 2.590000 6.734000 11.662000 0.000000 ] xS
-77.679001 14 m
(82%/93:\);/9$94/:%39$\)*<)[ 9.856000 7.518000 4.158000 7.784000 7.518000 2.590000 7.266000 3.892000 9.856000 7.784000 7.518000 7.266000 7.518000 8.036000 7.784000 7.266000 4.410000 2.590000 7.518000 7.266000 3.892000 9.590000 0.000000 ] xS
0.25 0 0 -0.25 40.25 105.125 cm
-46 -3.4060974 m
("9$=1$:&$4\(+\))[ 7.518000 7.518000 7.266000 6.734000 8.036000 7.266000 7.266000 4.144000 7.266000 8.036000 2.590000 6.482000 0.000000 ] xS
-46 14 m
(\(/>\)?%/>&2)[ 2.590000 7.784000 10.374000 3.892000 7.784000 4.158000 7.784000 10.374000 4.144000 0.000000 ] xS
0.25 0 0 -0.25 35.300346 79.25 cm
-25.158001 5.2969513 m
(9$?'&3-$)[ 7.518000 7.266000 7.784000 7.266000 4.144000 2.590000 6.482000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
11.75 122.25 m
13.75 124.25 l
39 124.25 l
41 122.25 l
41 112.75 l
39 110.75 l
13.75 110.75 l
11.75 112.75 l
h
11.75 122.25 m
f
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -24.25 155.75 cm
144 134 m
152 126 l
253 126 l
261 134 l
261 172 l
253 180 l
152 180 l
144 172 l
h
144 134 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 26.375 117.5 cm
-27.881001 -12.109146 m
(8'\(:"\('&$\))[ 9.856000 7.266000 2.590000 7.266000 7.518000 2.590000 7.266000 4.144000 7.266000 0.000000 ] xS
-35.181999 5.2969508 m
(@341'%$9&'\(\))[ 11.494000 2.590000 8.036000 8.036000 7.266000 4.158000 7.266000 7.518000 4.144000 7.266000 2.590000 0.000000 ] xS
-19.579 22.703049 m
(0$3?2&)[ 9.856000 7.266000 2.590000 7.784000 7.518000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -24.25 155.75 cm
202.5 180 m
202.5 224.10001 l
S
0 i
CM
26.375 97.724998 m
27.125 99.724998 l
25.625 99.724998 l
h
26.375 97.724998 m
f
0 J
0 j
0.25 0 0 -0.25 -24.25 155.75 cm
202.5 232.10001 m
205.5 224.10001 l
199.5 224.10001 l
h
202.5 232.10001 m
S
1 1 1 sc
CM
9.5 72.75 m
11.5 74.75 l
41.25 74.75 l
43.25 72.75 l
43.25 63.25 l
41.25 61.25 l
11.5 61.25 l
9.5 63.25 l
h
9.5 72.75 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -24.25 155.75 cm
135 332 m
143 324 l
262 324 l
270 332 l
270 370 l
262 378 l
143 378 l
135 370 l
h
135 332 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 26.375 68 cm
-38.766003 -3.4060977 m
(A$%"6\)BCDEF)[ 8.820000 7.266000 4.410000 7.518000 11.662000 3.892000 3.108000 10.374000 7.518000 5.180000 0.000000 ] xS
-55.762001 14 m
(G%H/\)C0\)4$I:3$9:+J)[ 3.374000 4.410000 4.662000 7.784000 3.892000 10.374000 9.856000 3.892000 8.036000 7.266000 6.216000 7.266000 2.590000 7.266000 7.518000 7.266000 6.482000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -24.25 155.75 cm
202.5 288 m
202.5 314.10001 l
S
0 i
CM
26.375 75.224998 m
27.125 77.224998 l
25.625 77.224998 l
h
26.375 75.224998 m
f
0 J
0 j
0.25 0 0 -0.25 -24.25 155.75 cm
202.5 322.10001 m
205.5 314.10001 l
199.5 314.10001 l
h
202.5 322.10001 m
S
1 1 1 sc
CM
16.25 50.450001 m
18.049999 52.25 l
34.700001 52.25 l
36.5 50.450001 l
36.5 45.049999 l
34.700001 43.25 l
18.049999 43.25 l
16.25 45.049999 l
h
16.25 50.450001 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -24.25 155.75 cm
162 421.20001 m
169.2 414 l
235.8 414 l
243 421.20001 l
243 442.79999 l
235.8 450 l
169.2 450 l
162 442.79999 l
h
162 421.20001 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 26.375 47.75 cm
-30.471001 5.2969513 m
(K'%+/&+1$)[ 9.072000 7.266000 4.410000 6.482000 7.784000 4.144000 6.482000 8.036000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -24.25 155.75 cm
202.5 378 m
202.5 404.10001 l
S
0 i
CM
26.375 52.724998 m
27.125 54.724998 l
25.625 54.724998 l
h
26.375 52.724998 m
f
0 J
0 j
0.25 0 0 -0.25 -24.25 155.75 cm
202.5 412.10001 m
205.5 404.10001 l
199.5 404.10001 l
h
202.5 412.10001 m
S
0.40784299 0.73725498 0.21176501 sc
CM
14 34.25 m
38.75 34.25 l
38.75 25.25 l
14 25.25 l
h
14 34.25 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -24.25 155.75 cm
153 486 m
252 486 l
252 522 l
153 522 l
h
153 486 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 26.375 29.75 cm
-23.471001 5.2969513 m
(L"%9$%M5)[ 6.496000 7.518000 4.662000 7.518000 7.266000 4.410000 2.338000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -24.25 155.75 cm
202.5 450 m
202.5 476.10001 l
S
0 i
CM
26.375 34.724998 m
27.125 36.724998 l
25.625 36.724998 l
h
26.375 34.724998 m
f
0 J
0 j
0.25 0 0 -0.25 -24.25 155.75 cm
202.5 484.10001 m
205.5 476.10001 l
199.5 476.10001 l
h
202.5 484.10001 m
S
/Cs2 SC
0 sc
0.25 0 0 -0.25 13.430387 39.75 cm
23.117548 5.2969513 m
(NOP)[ 7.784000 7.784000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -24.25 155.75 cm
270 351 m
332.10001 351 l
S
0 i
CM
60.775002 68 m
58.775002 68.75 l
58.775002 67.25 l
h
60.775002 68 m
f
0 J
0 j
0.25 0 0 -0.25 -24.25 155.75 cm
340.10001 351 m
332.10001 348 l
332.10001 354 l
h
340.10001 351 m
S
/Cs2 SC
0 sc
0.25 0 0 -0.25 51.199654 70.25 cm
-10.374 5.2969513 m
(\(/>)[ 2.590000 7.784000 0.000000 ] xS
0.25 0 0 -0.25 35.300346 56.75 cm
-26.798611 5.2969513 m
(9/%6'\()[ 7.518000 7.784000 4.410000 11.662000 7.266000 0.000000 ] xS
/Cs1 SC
0.58823502 0.384314 0.81568599 sc
CM
9.5 16.25 m
43.25 16.25 l
43.25 0.5 l
9.5 0.5 l
h
9.5 16.25 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -24.25 155.75 cm
135 558 m
270 558 l
270 621 l
135 621 l
h
148.5 558 m
148.5 621 l
256.5 621 m
256.5 558 l
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 26.375 8.375 cm
-43.568001 -12.109146 m
(03?2\)*/5$\)C0)[ 9.856000 2.590000 7.784000 7.518000 3.892000 9.590000 7.784000 6.734000 7.266000 3.892000 10.374000 0.000000 ] xS
-26.844999 5.2969513 m
(,5&%/?$9)[ 8.302000 6.734000 4.144000 4.158000 7.784000 7.784000 7.266000 0.000000 ] xS
-40.341 22.703049 m
(!%/?$5&$%/9$)[ 8.820000 4.158000 7.784000 7.784000 7.266000 6.734000 4.144000 7.266000 4.158000 7.784000 7.518000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
38.75 38.75 m
92.75 38.75 l
92.75 20.75 l
38.75 20.75 l
h
38.75 38.75 m
f
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -24.25 155.75 cm
441 468 m
468 468 l
468 540 l
441 540 l
279 540 m
252 540 l
252 468 l
279 468 l
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 65.75 29.75 cm
-103 -12.109146 m
(B9:%$'5$4\)Q35R\)./%S)[ 3.108000 7.518000 7.266000 4.158000 7.266000 7.266000 6.734000 7.266000 8.036000 3.892000 9.338000 2.590000 6.734000 7.000000 3.892000 3.626000 7.784000 4.410000 0.000000 ] xS
-103 5.2969513 m
(8/9?$93&'\(\)0$'%&\)*35$'5$)[ 9.856000 7.784000 7.518000 7.784000 7.266000 7.518000 2.590000 4.144000 7.266000 2.590000 3.892000 9.856000 7.266000 7.266000 4.410000 4.144000 3.892000 9.590000 2.590000 6.734000 7.266000 7.266000 6.734000 0.000000 ] xS
-103 22.703049 m
(8/9?$93&'\(\)Q$9'\(\)T#9/%6'\(3&3$5)[ 9.856000 7.784000 7.518000 7.784000 7.266000 7.518000 2.590000 4.144000 7.266000 2.590000 3.892000 9.338000 7.266000 7.518000 7.266000 2.590000 3.892000 8.820000 8.036000 7.518000 7.784000 4.410000 11.662000 7.266000 2.590000 2.590000 4.144000 2.590000 7.266000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -24.25 155.75 cm
202.5 522 m
202.5 548.09998 l
S
0 i
CM
26.375 16.725 m
27.125 18.725 l
25.625 18.725 l
h
26.375 16.725 m
f
0 J
0 j
0.25 0 0 -0.25 -24.25 155.75 cm
202.5 556.09998 m
205.5 548.09998 l
199.5 548.09998 l
h
202.5 556.09998 m
S
ep
end
%%Trailer
%%EOF
