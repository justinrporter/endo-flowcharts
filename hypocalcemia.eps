%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 589.000000 463.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.6 (Build 16G29) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 148 116
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 148 116
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue-Light
%!FontType1-1.0: HelveticaNeue-Light 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-Light def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /H put
dup 34 /y put
dup 35 /p put
dup 36 /o put
dup 37 /hyphen put
dup 38 /c put
dup 39 /a put
dup 40 /l put
dup 41 /e put
dup 42 /m put
dup 43 /i put
dup 44 /r put
dup 45 /t put
dup 46 /h put
dup 47 /d put
dup 48 /s put
dup 49 /P put
dup 50 /u put
dup 51 /V put
dup 52 /n put
dup 53 /space put
dup 54 /D put
dup 55 /fi put
dup 56 /R put
dup 57 /T put
dup 58 /F put
dup 59 /v put
dup 60 /w put
dup 61 /g put
dup 62 /two put
dup 63 /five put
dup 64 /O put
dup 65 /M put
dup 66 /C put
dup 67 /G put
dup 68 /S put
dup 69 /four put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -430 1 index div -305 2 index div 1987 3 index div 1163 5 -1 roll div]cvx def
/sfnts [<





2D442D17172D442D3F46016259582C4A633838634A2B695E20362716263E4F29294F3E264200000000020026FFF2020202CA001A002E00BFB8002F2FBA0001000200032BB8000110B8000210B80004D0B800042FB8002F10B8000ED0B8000E2FB8000210B80018D0B800182FBA001900020001111239B8000210B8001AD0B8001A2FB8000E10B8001BDC411B0006001B0016001B0026001B0036001B0046001B0056001B0066001B0076001B0086001B0096001B00A6001B00B6001B00C6001B000D5D410500D5001B00E5001B00025DB8000210B80025D000B800012FBA002A001300032BB8002A10BA0009002000032BB8000910303121112311232E0323220E0215141E0233323E0237331501343E0233321E0215140E0223222E0202023F020A2530371D3B573A1C1C3A573B1C3932270A02FE9D1329402D32452B13132B45322D40291302CAFED81C2A1D0E2C4B633737634B2B101D2A19620102284F3E27273E4F28284F3E27273E4F00020022FFF201F00213000A0026005FBA000B001600032BB8000B10BA000C000000032BB8000C10B8000B10B80001D0B8000C10B8001ED0B8001E2FB8000010B8001FD0B8001F2F00BA0022001B00032BB8002210BA0011000600032BB8001110BA0001000B00032BB8000110303101213E0333321E020521362E0223220E0215141E0233323637230E0123222E0201AFFEB204192A3C27263C2A17FEB3018D021837583E3D59381B1B38593D626B143F0F4E452D402A1301262343331F1F334259366951322F4D623337634B2B60583C48263A4900000000020022FF3301F00213002A003E00C3B8003F2FBA0001000200032BB8000110B8000210B80004D0B800042FB8003F10B8000ED0B8000E2FB8000210B80016D0B800162FBA0017000E0001111239B8000210B80018D0B8000E10B80030DC411B0006003000160030002600300036003000460030005600300066003000760030008600300096003000A6003000B6003000C60030000D5D410500D5003000E5003000025DB8000210B8003AD000BA001B002600032BB8001B10BA0009003500032BB8000910BA002B001300032BB8002B10303125112315232E0323220E0215141E02333236373315140623222E0227231E0333323E0227222E0235343E0233321E0215140E0201F03F0209212A331D38573B1F1A39583E395516024E581A32291D053F03273B4A273F573619E52C402A14132A402D2D3F2812152A3E2A01DA5915261D1029475F35376148293A30465E640B18271D293B261222405C4A23394A27284D3C25263E4C26274A39230000000001003B000001DE02CA001A0051BA001A000000032BB8001A10BA0010000D00032BB8001010B8001A10B80002D0B8001A10B80018D0B800182F00B800002FB800012FB8000E2FBA00150008




00>] def
/CharStrings 39 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/two 3 def
/four 4 def
/five 5 def
/C 6 def
/D 7 def
/F 8 def
/G 9 def
/H 10 def
/M 11 def
/O 12 def
/P 13 def
/R 14 def
/S 15 def
/T 16 def
/V 17 def
/a 18 def
/c 19 def
/d 20 def
/e 21 def
/g 22 def
/h 23 def
/i 24 def
/l 25 def
/m 26 def
/n 27 def
/o 28 def
/p 29 def
/r 30 def
/s 31 def
/t 32 def
/u 33 def
/v 34 def
/w 35 def
/y 36 def
/fi 37 def
/A.short01 38 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-430 -305 1987 1163}def
/UniqueID 4428012 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C93181B17796A1204F5476A04185A500C7D1646046CB4388F5303793A50701CA1F45B6EACDC75E56CE0B04327771CE311D74053FE096CF0B6B13ACFEE2E0A18C5E246C8DB3778385C4BB375B98765DAE01F50FBCAB69FD950A5F968DE178A2927FC73C971CA0018FD75BFE3BE9C9F2D866306EC7C74E21B1B69CAE21213420536A08A14CB66BB2D89EC15409E44BD3B7ACB3F440C7ECF157F05F524CCF8F2264E0FD65566B5B348C59F475930C7562C9176750A2ACC596CF10D77F1382608735289C6AE165821877C81E1177FBA4B1A607370C5380B967150DD4EF371957EDB493FE31AF0D490E62E4CF6FB2615A46024B63BD09F9959541A43434942B343D1C01C65224FDC68EE62A5890BA6001761338EFE6998E4DBACCB20BA8974E9A55064AF88853135BA497A1A2506E36079933C23D6BCBD9B30DEA7CB84CA68F12361FD9A03DC12519B993B9268CF85ACD9776D34FC208711EC81521041811D09E5BF3EE82C075A849E2FEA8CA828D1F50D5B160133DFB9CCD52B0D66ECA0B6072F0BE89A08A620D72173CB3F88D516EEB0B01BA19D9301B709A3A6021292C6D340C9EB10C77EA98488C0107DBBA5F816778512BCDD8791DCEC0935BF2822FA53CD4219E40CCB0BBC6561EAF1558235D862339C8AEA946BD5F8F650EF1D783116F67B502B44149AB64FFA7113BEEF64770B125B479AA162F70467E6A9181CE2D227FD72E309EF1C5A03BACE4FB6535FBFE280F7C239D4D1F6065D6E983AE40F8B9BC012F7


153EB676249460437EAB9575A013A9A40AB170F84DAE9615276D04D3DAC1CBC446C21CFD55FB4E021521067493878658497F51C5B795E999ECE8247B4476987E9417A4583E684BF1D53AADC3B41E47AB8BAE31D4152F706AF209E30920E2A9782F64B9A3157F931541EDD79E3A293C076ADD1C5D8BD04DEEE670D557AD9BF5F8C622312BEA5D8E1E205E2DDA8F40DEC65C36E0BA0195E5919E87940DCD13E30CF4B051075D3369DD31ACB905D6590C2825BFE721C0BAE97C94B61C447CB7398E433A9D64815131A920258DB1C0BB2398DA00EDE88C6F2CFCA0113267A279D975B1FB9905527CF57D73834EF5C3FF3B5DAA495BB341842656CB47D0886BDDBC711820BF336A3E9E362BB80C939785759F5553FE8614EE6800E695C2F34B29353888F1F14C877894948153D783926DF116E7E0A21C170012909249962EA73421D3BD945A56D6D4DC45EB9D93EC5198C48004EE4284CD3BD552C893CDDF0D5CE28F75B5A440BEDE2BD9A6ED9D64D8EA60496C0240CE56760785217ADA8ACDF4E42102A72679F86908A5CFBD31F218AFD5FFD092161AF2884FE035EAA3167C2672EDB3E30612804E0180E4E6041B47F30E2FF8373D628D08028F5514D6B4C6D13919DFD61422E69BDC4216054008EB1683149E75F4A97BA517ABC525AAA4ABD04AD9B8349DD3BC152A010AF1E9ADD3073E57016AA91734E61DE61CE51EBED389F0D671123D4327F5F00D9DAC39292A2A65CE5B1CA99299BB3B72AD8888D4FABE76857565FB1629198C43099ADAB0B554233145450769803B6C208561831609FBC1DEBBD591D9A2C38FAC956E9219D0E8BBDE59FD50252F0F9E7A510BA824D9402A3CC97C293889C8FC04C7CEE477EDB8ED751D1AC623BD24F35048A44C8A0F70FE27AE6AC637965B3A0814F468FA9F9E0F89943D41D1CD9A12C4375FCEF45A093EFF1B01F9E3EEB88D99E0B4485182B40E23013A76D06653BAC0218C90BCBE633D750B2CD481B0F8209CA5CBAD60661014FC6EFD1DAB0C480E8B5DB89899381976EA274849268E9A3083CF39F2FF506B1C18435A22DF5D0C2A5900D86861957186B1169342D0C51C472207123518C7C77E3297FE4330869A3C966BAA323FC59E8250115EE103F27509B3AC592BC719D2114EA05AD4C9253C49743F3DE26FEBA4C36A9690CB00011A45131B616E36C3D429BFD5F94782B6AEC14F75EEAAFEAF20E169B661BCB500DAA4C7CD4B4F07270897AA11C944B1B9D9E306F2C053886D0DE65C2162949B76333E6DC3C6AECAC5A51515A53739C793A433F925323B402C0BD659ECB73F24A5DC916C9531AD17C53458379984916AEB4BA0B10DBF65C00D9D86B00D16CE22DB1E078ED6E9DCB18C46335B510F5AD5CD2FA46975D14696B163D100FBC752AA3A7A92DFF16C6E7D5235477B57D55A5AF03BC88A3E29852FED394350
B56F7740925191C99E67552A6EC8F2E6C6968A9D0CA8EB7768F9B338BB6914A21F21A24B7F694533403C1571997DB3C12D7EAB9A3AB566E59768CDE5C0369A8D75B185C8EA23AA86752C98CF82F81D89BC908EA99DC3F92550D7A49C916102E3839E3B617D5D1A7239CEFFBF0D37A71ACC03F68B8AEE0B3530EF6E00AC7B0D9B910EE7FF427ACFB3EC74F320296F2357719A25AAF11F5C27FE1EBAE449A511767FDCFE54BB3F8BD0BC874730559E95CC34B2229E9BFE7C0960D8376916ED930BCC034CEEF86B66EA36FFF67537C8EC00E5C5CD12E76D558272EE194E8BCA1127815484D2C5E78352498E361E9769AA65FFED452BC4149CDDD21022D4791DDD90A984A80AFF3A0E796844E60044BEB3E61697BF8769ECC2DFF56A092BAF24900A575EC93C958F4369D9F06D9EEE8003EA9E69E5E9D21FB6CA5E08274916F43140D0701718734B02AA8F934E2C5E8B922B549319CD83B36072748BBEA0441263E92EF43D682F6437748F163E9B24448700C1249DD829BEE8039E1FDC50A077B0C27FCD38F70F723BCF2D4B096B01A1280B15E6225D6F1E54AF0F5313430264EF176DAEE90D9B6B4AFD2DD8ADA0325C255E8EDCAF1AB15DD4E700CA789A1136ACCF44A174876FB5394F4CD3F6F3F52948B98989CF9222060EAB1BDFF50EF89854FBE7A4E0D372D6EB86D062D006A363DDBEEBEEAC7904508D49203738495F59008E384A6362312A617D32A83BCD3F1FE95F452C78744BADC7BF20EB76C817C25E77F557A6682CE47E1C70CECE5FCED8DAF9C60203E45CE4B1BAC86D04F388D79CCD9100A2B40E885DE0D27EA4FDFC572B973C2CBCEA32EA59D0FC8EA161F666AD69DD6A5C992042731FACB42BA30FD1A86091AB87EA0DCDAF2A741E8D8B0755C0D6EA7FA623FBEF777223CA4A0E57A77744630A70C84079E81ED336263B47BAE7FC5F04B8438D1753B63B44126BA3162B770AF389CC27F09CF1A551EF68E9E149FBAB0A144E6DBD8EC5A3993EDCB758C3B97B0E70C30DDF616FA07833AE42ECDF63530EF7346C346B7642065F08C3B473A493E3DC38861A3C5818E869D60B488B18C96D39DE45A2BDB5112CE63399B221C5EB1B5688D42729BEAE1E8BF58204CBC511D24A57B5B95ECAB8C93C463A256EC746D4645F8AADD3B0B8AFF1F7ECCFB9F671416750D82945D543365C86AC228DB4B35141671D6FCC1067614941D8856BE10F955618EE86E83453CB56F1590D9EFC10014E9B4E5AF39B62D43D420AD613969138BE590397A4DA12772069B652A8DD305F5C774527F7245BB600ABFF664B023D4597370C0F6FC96EA4D9AD4B3063283197F7EDE8E7DAC0EA53F17714F015EAE1772A3C2D7E9A3826B4B428409084BF2958F3775DDCD7A78B0600E507BD6DDB18460CC64BABBE70866935B442EC98D5A74B4C4FC6AC746A230C2E068879B7E5
2F162BA03C3A8B71D498440571F3202684A25379A6821150B29E3CB77642B313A3C1C99ADC15734BC76558595045BEC76DAFF95A792570BAFCF27EB7126C923CF88824FD1A3259A49E2F14CF2621FFF5D49F613E9FC0FBFE704924248E6D29583DDD2D3CFFBA8E80513F141F47B7460CDEE252C6BF559898B6A7BFC0A08F8D044FBA1B834747F46BB58AE03B7FF4BDE97162F41789AEA5F3A534E9A007BCA0CB41E7B83CDC25A0155735574DEC855E1A026AAC85A50C280D551484BCAD39127ADE594829DD9F95756E7047EEDB464A62388B4E29580995519CC7A53E17F3F41EBB6D6B59937C6128C32B59BD8431C76E0F9A2FEB59075C271C093619E4FD43E71AAE1D1E21980BA0161A348EDAF05692BA037203FFC8BB913FC1A29D475665FB0BA48485890493397C31193D9A6E2273E005FE0A5147C6D61D537FB209FF93282CEEF39064AC549EE49388113D6A38923B2DD9BC414A9E94B02370CC71F76800EBCC87F2E703A944F946CCE51529C9FED2EF1CEABF0AC02E95ACDC29D7BF98E99F952C47C600D0C0AF612CD09986A142C560A3EE0AA5D054B2AB0A41133A39F4E671ED92BBA15325848F39D52C7FD6AF6AFBA0C3181994B8C59B94A7A133249B93D0A7B0632CA6B5492C4B669A7841D3104920CBA031DA9714B92ED49113A3888320E99949A3E80CF69094F4E861A78EDEF199FE3194730905F5A9B1D3E6216FFFE8272BDAD131B608453F6C0F10C405103559C87F6A4FBD610EAD9455E243EDB2C0A4DD99A5FE3B31C2FD5469CBD27E167D3C76967460C6AC218E2AF817209F86613223C2FCFC92049E7C8059245B86772307ACAC04DB75DF0FC8838AF23AFB2B854868AF8EB50871C790BFCC565C1BA845B8F2F9533E6A74D89543BCCC9C8774828EF943DC024B99126B53BED54FC4F48DF0F4BCF2D62AA0C7C772586F736C513C192A77484B94FF30E518FBBE89310B462807F9AD91230A1BFCE2169095D238312591642D2403D562C64F00427502C2A7DDBC43E8ABCABADDC3BD5AC257462D5D4B7824AB929A4B25F05B5E2506B4729817C6B70C6446F4B9A847EB07C7911D736DD84D5FF017562A624F50A24BD1036C0C971D0BA3022F19D98B5D9435B15263C26102B1122B08F960D8B8AAF382A179B9EC8AA128652148CECD44055C24A2B879F78C992B703D97E0640A55CC6BA56FFF54CFA2D0FAC2BFB9BC065C13B7F54C3BC7F7FCE09520DD2D52D65BC3C05D31A794F40526A4C10BEC230D4940D4C9FED5EF7198E693BE558C28F083A3A9FF97169939AAAA423F9ABA45118A3EB6A7964CB358556EAE26E860646C7F8A9AC8634424B0DD72B32E43F398AB61EE522F02B90C86F5045064C6EC4F67EF1C4E20046E6653B264DA3C63FBCD717885A10C5F3AFBA51ED729A308B6EC7604AF7FD442CE2D12CF6BCC61F3F80713DA2AAC
9E54034C2F2285DC34C10CE8F930340207F39BF2AC37F12A29BE0DE87C0AC32CC468557BC07F4C6210E0DB55DAE211416D9F079A7A89BA37FB261682A7F575F3FE4F69A1679FFEF71851F6B87054EA3D3B02E5C40AA0404117F8EE9086F4B5BFAA5D54DC99F2469A015AF4E62B13EFCFFE6A6AFED54F7130992BD8B1AD302AD72B09AB8AA4C5195FEF696C85CB1285AC2F7A179E35E15BCFBF4727037EFB1471AF0FEB03A1AD737B17268DFFE67419837ACC7C35B57E7BD0A485EA7E6CCF4C412CC749B306ECA3961DF8CDCDCE06254A8702EEA8BF28126A99A1986B855CA281422A4276A48722F960BF3BDDCDB36B4072EF662FDBEFE742ECFFA291CECD15E36092425CB9532D8D521109399D328BC0B73B5244DE12B0DD07A69455E3D2004C12DE48181E90D75A8D0B867669254E496373FB3C4F5948A23CB742C3D7E440848C4CEC699E4921C7302CAD0B9F9EB2AF4C44C68368267EAC07BB7C7BB260FB4F802D78084B4A15F1C225DCB3A7EAAD942114E4E9CCC431F90A7B23D3BC46A4CFF216FD2E8E9BBFF57C2450E421F003DED89CBE69AB4B4CB325312C1CBB01A76E175036A226B7E608AF33DCF165A4708189CFADA137672A165702919F0590D25AB92B1C4766F22610A046B683BF9B65B38F3ED9CE06D3D870BFB6CCA41B45F4215D11A9C5940F9D436685EE0567E4D406BA7E04113024082012321FEBC6DDD25BD7BE436A83C9A990D90F6696B288FF18C850EEF9F47F259E362C703910609A5A1DA99CBF6A898E4F3B90FDC10A807FDC5780C5FEE02A8FB57CA698D922C30CE7B0D681C5B0AF88BD3B4733E62533BABED655BA283688B758E3723279AD7710DF667372C56A59B8056FEA045B7AACC201594B6E5641E6BE39F656FBCC1C4936FDC11910CA3AEB0199412588FD4FBBA8763504EB595734345A4EB7BCF05CFFAE2FBBCF3FBE0098FF82F7B56210647E644C7D2F6F33700ADE0056F647D6527CBE02D6F59595A209A99583748D3344793F5DE2A61CC1217D399FEB9F02DBC0A03900E7C822F61E03074870F6BF67BA5E3502857E092FA22075BF16D86ED1A51A8775B8928D64198727CC1C28CD98E2558BCEA1D5F6DE450F26B1D27F2B06EAB0393339D7E3D37CF1095C676795F681B8FA8B38BB5E8EB3531A1204DFEC5265E55034774E4B4147364BF31BDBCADEC588DDF53B9B116D8D8EAFC79B89AEF39666FD828B7EE7FEFC17776307C8B2CFC0605F2595CD18739EDEC5C1E3F8844DA4ADBBE553CBDA4307
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Light cguidfix
/F1.1/HelveticaNeue-Light renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 147.25 115.75 rc
43.25 102.875 m
52.25 108.5 l
70.25 108.5 l
79.25 102.875 l
70.25 97.25 l
52.25 97.25 l
h
43.25 102.875 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
261 94.5 m
297 72 l
369 72 l
405 94.5 l
369 117 l
297 117 l
h
261 94.5 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 61.25 102.875 cm
/F1.1[ 14 0 0 -14 0 0]sf
-18.669001 -3.4060974 m
(!"#$%)[ 9.856000 6.482000 8.036000 7.784000 0.000000 ] xS
-26.586 14 m
(&'\(&\)*+')[ 7.266000 7.266000 2.590000 7.266000 7.266000 11.662000 2.590000 0.000000 ] xS
/Cs1 SC
0.40784299 0.73725498 0.21176501 sc
CM
0.5 88.25 m
32 88.25 l
32 79.25 l
0.5 79.25 l
h
0.5 88.25 m
f
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
90 153 m
216 153 l
216 189 l
90 189 l
h
90 153 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 16.25 83.75 cm
-18.669001 -3.4060974 m
(!"#$%)[ 9.856000 6.482000 8.036000 7.784000 0.000000 ] xS
-44.338001 14 m
(#','-.",$+/+0*)[ 8.036000 7.266000 4.410000 7.266000 4.144000 7.518000 6.482000 4.158000 7.784000 2.590000 8.036000 2.590000 6.734000 0.000000 ] xS
/Cs1 SC
0.40784299 0.73725498 0.21176501 sc
CM
29.75 9.5 m
61.25 9.5 l
61.25 0.5 l
29.75 0.5 l
h
29.75 9.5 m
f
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
207 468 m
333 468 l
333 504 l
207 504 l
h
207 468 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 45.5 5 cm
-40.578999 -3.4060974 m
(10\)2/$."#$%)[ 8.820000 6.734000 7.266000 7.518000 8.036000 7.784000 7.518000 6.482000 8.036000 7.784000 0.000000 ] xS
-44.338001 14 m
(#','-.",$+/+0*)[ 8.036000 7.266000 4.410000 7.266000 4.144000 7.518000 6.482000 4.158000 7.784000 2.590000 8.036000 2.590000 6.734000 0.000000 ] xS
/Cs1 SC
0.40784299 0.73725498 0.21176501 sc
CM
115.25 61.25 m
146.75 61.25 l
146.75 52.25 l
115.25 52.25 l
h
115.25 61.25 m
f
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
549 261 m
675 261 l
675 297 l
549 297 l
h
549 261 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 131 56.75 cm
-28.819 -3.4060974 m
(3+-'*+4565)[ 8.386000 2.590000 4.144000 7.266000 11.662000 2.590000 7.518000 3.892000 9.590000 0.000000 ] xS
-30.73 14 m
(6\)7&+\)4&")[ 9.590000 7.266000 6.216000 7.266000 2.590000 7.266000 7.518000 7.266000 0.000000 ] xS
/Cs1 SC
0.40784299 0.73725498 0.21176501 sc
CM
115.25 43.25 m
146.75 43.25 l
146.75 34.25 l
115.25 34.25 l
h
115.25 43.25 m
f
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
549 333 m
675 333 l
675 369 l
549 369 l
h
549 333 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 131 38.75 cm
-28.819 -3.4060974 m
(3+-'*+4565)[ 8.386000 2.590000 4.144000 7.266000 11.662000 2.590000 7.518000 3.892000 9.590000 0.000000 ] xS
-33.061001 14 m
(8\)0+0-'4&\))[ 9.338000 7.266000 6.734000 2.590000 6.734000 4.144000 7.266000 7.518000 7.266000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
50 86.449997 m
51.799999 88.25 l
70.699997 88.25 l
72.5 86.449997 l
72.5 81.050003 l
70.699997 79.25 l
51.799999 79.25 l
50 81.050003 l
h
50 86.449997 m
f
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
288 160.2 m
295.20001 153 l
370.79999 153 l
378 160.2 l
378 181.8 l
370.79999 189 l
295.20001 189 l
288 181.8 l
h
288 160.2 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 61.25 83.75 cm
-37.345001 5.2969513 m
(1\('0*'519!)[ 8.820000 2.590000 7.266000 6.734000 11.662000 7.266000 3.892000 8.820000 7.784000 0.000000 ] xS
/Cs1 SC
0.40784299 0.73725498 0.21176501 sc
CM
61.25 9.5 m
92.75 9.5 l
92.75 0.5 l
61.25 0.5 l
h
61.25 9.5 m
f
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
333 468 m
459 468 l
459 504 l
333 504 l
h
333 468 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 77 5 cm
-38.388 5.2969513 m
(8\)4'\(5:'+\(2,\))[ 9.338000 7.266000 7.518000 7.266000 2.590000 3.892000 7.518000 7.266000 2.590000 2.590000 7.518000 4.158000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
288 171 m
243 171 l
225.89999 171 l
S
0 i
CM
32.474998 83.75 m
34.474998 83 l
34.474998 84.5 l
h
32.474998 83.75 m
f
0 J
0 j
0.25 0 0 -0.25 -22 126.5 cm
217.89999 171 m
225.89999 174 l
225.89999 168 l
h
217.89999 171 m
S
/Cs2 SC
0 sc
0.25 0 0 -0.25 41.179688 83.75 cm
-9.7229996 -3.4060974 m
(4$-)[ 7.518000 7.784000 0.000000 ] xS
-25.158001 14 m
(\)\(\);'-\)/)[ 7.266000 2.590000 7.266000 6.482000 7.266000 4.144000 7.266000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
333 117 m
333 132.75 l
333 143.10001 l
S
0 i
CM
61.25 88.724998 m
62 90.724998 l
60.5 90.724998 l
h
61.25 88.724998 m
f
0 J
0 j
0.25 0 0 -0.25 -22 126.5 cm
333 151.10001 m
336 143.10001 l
330 143.10001 l
h
333 151.10001 m
S
1 1 1 sc
CM
50 50.450001 m
51.799999 52.25 l
70.699997 52.25 l
72.5 50.450001 l
72.5 45.049999 l
70.699997 43.25 l
51.799999 43.25 l
50 45.049999 l
h
50 50.450001 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
288 304.20001 m
295.20001 297 l
370.79999 297 l
378 304.20001 l
378 325.79999 l
370.79999 333 l
295.20001 333 l
288 325.79999 l
h
288 304.20001 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 61.25 47.75 cm
-32.542999 5.2969513 m
(1.$0#.'-\))[ 8.820000 7.518000 7.784000 6.734000 8.036000 7.518000 7.266000 4.144000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
333 189 m
333 207 l
333 215.10001 l
S
0 i
CM
61.25 70.724998 m
62 72.724998 l
60.5 72.724998 l
h
61.25 70.724998 m
f
0 J
0 j
0.25 0 0 -0.25 -22 126.5 cm
333 223.10001 m
336 215.10001 l
330 215.10001 l
h
333 223.10001 m
S
/Cs2 SC
0 sc
0.25 0 0 -0.25 72.5 75.75 cm
-40 5.2969513 m
(\)\(\);'-\)/)[ 7.266000 2.590000 7.266000 6.482000 7.266000 4.144000 7.266000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
378 315 m
405 315 l
422.10001 315 l
S
0 i
CM
85.525002 47.75 m
83.525002 48.5 l
83.525002 47 l
h
85.525002 47.75 m
f
0 J
0 j
0.25 0 0 -0.25 -22 126.5 cm
430.10001 315 m
422.10001 312 l
422.10001 318 l
h
430.10001 315 m
S
/Cs2 SC
0 sc
0.25 0 0 -0.25 78.70002 47.75 cm
-10.374 -3.2030487 m
(\($<)[ 2.590000 7.784000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
333 333 m
333 346.5 l
333 368.10001 l
S
0 i
CM
61.25 32.474998 m
62 34.474998 l
60.5 34.474998 l
h
61.25 32.474998 m
f
0 J
0 j
0.25 0 0 -0.25 -22 126.5 cm
333 376.10001 m
336 368.10001 l
330 368.10001 l
h
333 376.10001 m
S
/Cs2 SC
0 sc
0.25 0 0 -0.25 72.5 39.75 cm
-40 5.2969513 m
(.+=.)[ 7.518000 2.590000 7.784000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
86 50.450001 m
87.800003 52.25 l
106.7 52.25 l
108.5 50.450001 l
108.5 45.049999 l
106.7 43.25 l
87.800003 43.25 l
86 45.049999 l
h
86 50.450001 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
432 304.20001 m
439.20001 297 l
514.79999 297 l
522 304.20001 l
522 325.79999 l
514.79999 333 l
439.20001 333 l
432 325.79999 l
h
432 304.20001 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 97.25 47.75 cm
-25.284 5.2969513 m
(>?%@!6)[ 7.784000 7.784000 5.180000 10.374000 9.856000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
477 297 m
477 279 l
539.09998 279 l
S
0 i
CM
114.775 56.75 m
112.775 57.5 l
112.775 56 l
h
114.775 56.75 m
f
0 J
0 j
0.25 0 0 -0.25 -22 126.5 cm
547.09998 279 m
539.09998 276 l
539.09998 282 l
h
547.09998 279 m
S
1 J
1 j
0.60000002 i
477 333 m
477 351 l
539.09998 351 l
S
0 i
CM
114.775 38.75 m
112.775 39.5 l
112.775 38 l
h
114.775 38.75 m
f
0 J
0 j
0.25 0 0 -0.25 -22 126.5 cm
547.09998 351 m
539.09998 348 l
539.09998 354 l
h
547.09998 351 m
S
/Cs2 SC
0 sc
0.25 0 0 -0.25 105.2431 56.75 cm
-10.374 -3.2030487 m
(\($<)[ 2.590000 7.784000 0.000000 ] xS
0.25 0 0 -0.25 105.34677 38.75 cm
-20.615 13.796951 m
(4$,*'\()[ 7.518000 7.784000 4.410000 11.662000 7.266000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
50 68.449997 m
51.799999 70.25 l
70.699997 70.25 l
72.5 68.449997 l
72.5 63.049999 l
70.699997 61.25 l
51.799999 61.25 l
50 63.049999 l
h
50 68.449997 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
288 232.2 m
295.20001 225 l
370.79999 225 l
378 232.2 l
378 253.8 l
370.79999 261 l
295.20001 261 l
288 253.8 l
h
288 232.2 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 61.25 65.75 cm
-33.754002 5.2969513 m
(1\('0*'5A=)[ 8.820000 2.590000 7.266000 6.734000 11.662000 7.266000 3.892000 11.494000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
333 261 m
333 279 l
333 287.10001 l
S
0 i
CM
61.25 52.724998 m
62 54.724998 l
60.5 54.724998 l
h
61.25 52.724998 m
f
0 J
0 j
0.25 0 0 -0.25 -22 126.5 cm
333 295.10001 m
336 287.10001 l
330 287.10001 l
h
333 295.10001 m
S
0.40784299 0.73725498 0.21176501 sc
CM
0.5 70.25 m
32 70.25 l
32 61.25 l
0.5 61.25 l
h
0.5 70.25 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
90 225 m
216 225 l
216 261 l
90 261 l
h
90 225 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 16.25 65.75 cm
-34.916 -3.4060974 m
(A'=4\)0+2*5)[ 11.494000 7.266000 7.784000 7.518000 7.266000 6.734000 2.590000 7.518000 11.662000 0.000000 ] xS
-30.73 14 m
(6\)7&+\)4&")[ 9.590000 7.266000 6.216000 7.266000 2.590000 7.266000 7.518000 7.266000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
288 243 m
243 243 l
225.89999 243 l
S
0 i
CM
32.474998 65.75 m
34.474998 65 l
34.474998 66.5 l
h
32.474998 65.75 m
f
0 J
0 j
0.25 0 0 -0.25 -22 126.5 cm
217.89999 243 m
225.89999 246 l
225.89999 240 l
h
217.89999 243 m
S
/Cs2 SC
0 sc
0.25 0 0 -0.25 72.5 57.75 cm
-40 5.2969513 m
(4$,*'\()[ 7.518000 7.784000 4.410000 11.662000 7.266000 0.000000 ] xS
0.25 0 0 -0.25 42.224609 65.75 cm
-10.374 -3.2030487 m
(\($<)[ 2.590000 7.784000 0.000000 ] xS
/Cs1 SC
0.58823502 0.384314 0.81568599 sc
CM
0.5 106.25 m
32 106.25 l
32 97.25 l
0.5 97.25 l
h
0.5 106.25 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
90 81 m
216 81 l
216 117 l
90 117 l
h
102.6 81 m
102.6 117 l
203.39999 117 m
203.39999 81 l
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 16.25 101.75 cm
-25.542999 5.2969513 m
(B'\(&+-,+$\()[ 9.856000 7.266000 2.590000 7.266000 2.590000 4.144000 4.410000 2.590000 7.784000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
153 153 m
153 135 l
153 126.9 l
S
0 i
CM
16.25 96.775002 m
15.5 94.775002 l
17 94.775002 l
h
16.25 96.775002 m
f
0 J
0 j
0.25 0 0 -0.25 -22 126.5 cm
153 118.9 m
150 126.9 l
156 126.9 l
h
153 118.9 m
S
0.58823502 0.384314 0.81568599 sc
CM
0.5 52.25 m
32 52.25 l
32 43.25 l
0.5 43.25 l
h
0.5 52.25 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
90 297 m
216 297 l
216 333 l
90 333 l
h
102.6 297 m
102.6 333 l
203.39999 333 m
203.39999 297 l
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 16.25 47.75 cm
-34.916 -3.4060974 m
(A'=4\)0+2*)[ 11.494000 7.266000 7.784000 7.518000 7.266000 6.734000 2.590000 7.518000 0.000000 ] xS
-28.266001 14 m
(8\)#\(\)-+$4)[ 9.338000 7.266000 8.036000 2.590000 7.266000 4.144000 2.590000 7.784000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
153 261 m
153 279 l
153 287.10001 l
S
0 i
CM
16.25 52.724998 m
17 54.724998 l
15.5 54.724998 l
h
16.25 52.724998 m
f
0 J
0 j
0.25 0 0 -0.25 -22 126.5 cm
153 295.10001 m
156 287.10001 l
150 287.10001 l
h
153 295.10001 m
S
0.58823502 0.384314 0.81568599 sc
CM
0.5 115.25 m
32 115.25 l
32 106.25 l
0.5 106.25 l
h
0.5 115.25 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
90 45 m
216 45 l
216 81 l
90 81 l
h
102.6 45 m
102.6 81 l
203.39999 81 m
203.39999 45 l
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 16.25 110.75 cm
-24.374001 -3.4060974 m
(B'\(&+2*5)[ 9.856000 7.266000 2.590000 7.266000 2.590000 7.518000 11.662000 0.000000 ] xS
-30.863001 14 m
(C\(2&$4'-\))[ 10.374000 2.590000 7.518000 7.266000 7.784000 7.518000 7.266000 4.144000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
50 30.200001 m
51.799999 32 l
70.699997 32 l
72.5 30.200001 l
72.5 24.799999 l
70.699997 23 l
51.799999 23 l
50 24.799999 l
h
50 30.200001 m
f
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
288 385.20001 m
295.20001 378 l
370.79999 378 l
378 385.20001 l
378 406.79999 l
370.79999 414 l
295.20001 414 l
288 406.79999 l
h
288 385.20001 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 61.25 27.5 cm
-28.007 -3.4060977 m
(D.$,-5E-.5)[ 8.820000 7.518000 7.784000 4.410000 4.144000 3.892000 7.784000 4.144000 7.518000 0.000000 ] xS
-36.868999 14 m
(A\)-'&',#'\(0)[ 11.494000 7.266000 4.144000 7.266000 7.266000 7.266000 4.410000 8.036000 7.266000 2.590000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -22 126.5 cm
333 414 m
333 441 l
301.5 441 l
270 441 l
270 458.10001 l
S
0 i
CM
45.5 9.9750004 m
46.25 11.975 l
44.75 11.975 l
h
45.5 9.9750004 m
f
0 J
0 j
0.25 0 0 -0.25 -22 126.5 cm
270 466.10001 m
273 458.10001 l
267 458.10001 l
h
270 466.10001 m
S
1 J
1 j
0.60000002 i
333 414 m
333 441 l
364.5 441 l
396 441 l
396 458.10001 l
S
0 i
CM
77 9.9750004 m
77.75 11.975 l
76.25 11.975 l
h
77 9.9750004 m
f
0 J
0 j
0.25 0 0 -0.25 -22 126.5 cm
396 466.10001 m
399 458.10001 l
393 458.10001 l
h
396 466.10001 m
S
/Cs2 SC
0 sc
0.25 0 0 -0.25 53.648376 16.25 cm
-10.241 -3.2030487 m
("\)0)[ 6.482000 7.266000 0.000000 ] xS
0.25 0 0 -0.25 69.328064 16.25 cm
-7.651 -3.2030487 m
(4$)[ 7.518000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
