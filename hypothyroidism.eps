%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 643.000000 511.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.6 (Build 16G29) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 161 128
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 161 128
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue-Light
%!FontType1-1.0: HelveticaNeue-Light 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-Light def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /S put
dup 34 /x put
dup 35 /space put
dup 36 /H put
dup 37 /y put
dup 38 /p put
dup 39 /o put
dup 40 /t put
dup 41 /h put
dup 42 /r put
dup 43 /i put
dup 44 /d put
dup 45 /T put
dup 46 /N put
dup 47 /parenleft put
dup 48 /comma put
dup 49 /a put
dup 50 /e put
dup 51 /l put
dup 52 /s put
dup 53 /c put
dup 54 /n put
dup 55 /parenright put
dup 56 /m put
dup 57 /k put
dup 58 /v put
dup 59 /greater put
dup 60 /six put
dup 61 /zero put
dup 62 /mu put
dup 63 /U put
dup 64 /slash put
dup 65 /L put
dup 66 /u put
dup 67 /b put
dup 68 /P put
dup 69 /C put
dup 70 /G put
dup 71 /quoteright put
dup 72 /plusminus put
dup 73 /M put
dup 74 /g put
dup 75 /q put
dup 76 /w put
dup 77 /D put
dup 78 /I put
dup 79 /f put
dup 80 /fi put
dup 81 /E put
dup 82 /plus put
dup 83 /hyphen put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -430 1 index div -305 2 index div 1987 3 index div 1163 5 -1 roll div]cvx def
/sfnts [<






B8000C10B8001ED0B8001E2FB8000010B8001FD0B8001F2F00BA0022001B00032BB8002210BA0011000600032BB8001110BA0001000B00032BB8000110303101213E0333321E020521362E0223220E0215141E0233323637230E0123222E0201AFFEB204192A3C27263C2A17FEB3018D021837583E3D59381B1B38593D626B143F0F4E452D402A1301262343331F1F334259366951322F4D623337634B2B60583C48263A49000000000100060000011002CA001B0057BA0003001400032BB8000310B8001410B80018D0B8000310B8001AD000B800192FBA000F000800032BB8000F10BA0001000000032BB8000110B8000810B8000BD0B8000B2FB8000110B80015D0B8000010B80017D0303101352335343E0233321617352E0123220E021D01231533113311010366020D1C1A0B160D0F180E26311C0A58583F01CF352D15241B100302360202162838212F35FE3101CF000000020022FF3301F00213002A003E00C3B8003F2FBA0001000200032BB8000110B8000210B80004D0B800042FB8003F10B8000ED0B8000E2FB8000210B80016D0B800162FBA0017000E0001111239B8000210B80018D0B8000E10B80030DC411B0006003000160030002600300036003000460030005600300066003000760030008600300096003000A6003000B6003000C60030000D5D410500D5003000E5003000025DB8000210B8003AD000BA001B002600032BB8001B10BA0009003500032BB8000910BA002B001300032BB8002B10303125112315232E0323220E0215141E02333236373315140623222E0227231E0333323E0227222E0235343E0233321E0215140E0201F03F0209212A331D38573B1F1A39583E395516024E581A32291D053F03273B4A273F573619E52C402A14132A402D2D3F2812152A3E2A01DA5915261D1029475F35376148293A30465E640B18271D293B261222405C4A23394A27284D3C25263E4C26274A39230000000001003B000001DE02CA001A0051BA001A000000032BB8001A10BA0010000D00032BB8001010B8001A10B80002D0B8001A10B80018D0B800182F00B800002FB800012FB8000E2FBA0015000800032BB8001510BA0019000100001112393031131133113E0333321E0215113311342E022322060723113B3F0117293B2626331E0C3F122C4936375C120202CAFD36012D26412F1B182A3921FEBE014C2E4A331C392F011F0002003D0000007C02CA000300070027BA0003000000032BB8000310B8000010B80004D0B8000310B80006D000B800052FB800002F303113153335071133113D3F3F3F02CA6565C6FDFC02040001003C000001FC02CA000B0033BA000B000000032BB8000B10B80002D000B800012FB800052FB800002FBA000800010000111239BA000A0001000011123930311311333537133303372305




0400510043003400250017000000122BBF000500580048003800280018000000122B00BF0002005F004E003D002C001A000000122BBF00030068005500430030001D000000122B00BA0006000500112BB8000120457D691844B800002B000000
00>] def
/CharStrings 53 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/plus 4 def
/comma 5 def
/hyphen 6 def
/slash 7 def
/zero 8 def
/six 9 def
/greater 10 def
/C 11 def
/D 12 def
/E 13 def
/G 14 def
/H 15 def
/I 16 def
/L 17 def
/M 18 def
/N 19 def
/P 20 def
/S 21 def
/T 22 def
/U 23 def
/a 24 def
/b 25 def
/c 26 def
/d 27 def
/e 28 def
/f 29 def
/g 30 def
/h 31 def
/i 32 def
/k 33 def
/l 34 def
/m 35 def
/n 36 def
/o 37 def
/p 38 def
/q 39 def
/r 40 def
/s 41 def
/t 42 def
/u 43 def
/v 44 def
/w 45 def
/x 46 def
/y 47 def
/plusminus 48 def
/mu 49 def
/quoteright 50 def
/fi 51 def
/A.short01 52 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-430 -305 1987 1163}def
/UniqueID 4428012 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C958EB6717097F133BD4FDC2735943420C26687CDC55039E9A900F0451EE3A0B92BC6B90E754ED52D256D2F9528E84E66B9AFC73736259535DC6B4C6FFAF65D75D8C4FDDD90B168D2C7B8EFAB182EC3D2E4B2B62CD9F6B9A2C3E37D80C8FE603ABB6930F45BA4CD8874EBC6706D745F28923E2263D62860F9311862FC5C26265C7F0543524C1E01B6E405A0267E157CA20D115DF2EED04EC7544666AD781B153D84C2C2F3291A6E0488CAFE7207AEDADC8DEF40146791BC91FBFCE3C4B39F20B976316CF54CCA4CF1F2171BD9C6EE3355EB7BACF7D0EC186D40289C416DFE2703D7FD90FBB47605B14AC0DD512BD04E08DD7FA09CB88706F064D7D9D8815063BFF013F2C180C3623117C32BECC669578B52531136B92AD147947BC3F88CFCFD3232599C1D62C58A2B0498BC706359E4A4941BDE2600E59324F860D22F135451768D8FE6B2C9F72970B474A19944DF34F6A03BB4127FF7A887DAC9C3F77CD2E7BCAA207797E0679DE9472531B5BA984C3F185089B9F28062904301137B9867082ADE1C492A346D75D3140E5DE0B56ED051E88DC1B5C02B8A8783F6C24DC335B365082073809322DEB54B46FA55078393FAF6C5F8A142B0D8B7E6F9DFF683DE52A7F60C9867370EA530DDEDF6BD0A4D0400FF399875B1E1440EFB6D171BABEFEA712EBC530C85329D3FA80E67973F3F1425D52EA7CB0007A34E39C0D12450182A3505E921D3E7824BC2E34143BACA193355F06971777D35C149C63502E7A5F05565DB
AA5393886D681064AF126EF7058432F2E8667279E8CBA263CF841EB54A6C8A7491D396F0D5526359D2A42760B57796AF9C80346CE4B79E2AFB843A8ACF6A480D7E0A7C4D3DE9A7B679ABCE690D6E65FFDE135EEECF0EBD2DE913DABF0920C74033AAE22DC40AB0E1A681930D346B3051D4D368D3B2ED5FC311624AC2B871D0C98D4C51DEA88D3CDEC8442D549C159D5622C0FCE26B60A9DFC5FE31009C98A3E1BD54C6F63E709977D61149E0C583A132F0E0631632E08B822AB3D3AD511C2998239DFDB2E0BBF836FACB7BBAA19A0F7FFEFCF7B39631991F6A335CECB34F2607EEF69AC4D13BAF67ACE4F8042FCC7D615A07F77C96FC513A5C615A89FE528296B2F7240D6B93403A47B60EB9E9E46CE5F19DA33F5D23850E9A06BFAD19CDA25890440AC04EF99EAEAC630CCABD38E92FE315BA0015C50E4DCBA47F939844AFCC176586417863E330A1725FD70BA064862741D22D59A3F29A06438436FCC9FAACED1B0516CBFBB25DA7BB10EBA28621FAE2DD65322B81A9B1169CD77672AD3EBE97AE5158CE740E1F689B62AF3BF1B0F4FAADA233EF1BAAFE845EA4D680CA865FDA29F8C55A335D36D842820D56720FE20B7C3EACCD86B6F72D4485186A6BF8764392D26402EFF68D1EACDFC50166DD281D1932E0E4AB8BADED1E025CD463A8813E16C43DFE09F3D85E2C8D0DF8B8A5705828A9710DB45086634C41C91A78911B64303D1E9C2533AFA7A48DABD3DB3E57C682C8E8E6CDA7BB73EE5512E3B49641281CA9D59E55546173AA5B38A0431BC061460EBB530AB14568D3A1DA18CDEE2E0517DCC436AE68B4E362729EC101017DD185C141075CD0C1FFD4071961A6757918F4870FD93F2C70E4102289B4360EDE2BFF327540F68534E775A37403F3F3C709D6D0B0B1626D9F11C1717C7C19D393DB9A0649D6923102B9BA6AA7486726DDD833B53E23B14A29AA95A8443B72E5329734BD9325C124B41044CE9CFF7EA083159795141D8A2BC91C7BB734B9AE1288F3B338961BF6EC90B8375844176B8E07B95873E91A4AB19942AE80C5E8C9E0EA2420DD071C17CE473C050B1D1F1A6367DF151E8E91D5188CB1A98B92C491E3506EE1DCE3948F3EDC0AB5C5E1689AB44E4DADF754698ADB54D179A611C543BDF1694972047A32A12999E5F4F6BD97D672FCDE76FC4EC834DBD4148FB53EB074100D41EB2F030668DE1D4015920901EF6BDB64FF091AD0E8B405003ACBC8D85142E1151F53F8160DF210C18A95BB475895BDC8E064E0F7346485615CF6CE61FFF2576A72EFBD7E970A22F46822D7754E7FE8AC00F7C10BBF115E9467CD2C7C7445578372C3A935E155FACCDF56A76AF36940C84718ADE12E21B53BCC0C7654538F030BD55479D3A1C7562E86519A4407569E8AFD7C703D469931FBD57F55C7070C2332CA4CD827012A8E12E60BE79FF218


2BAEB7C9F55F620B7ABC11565D3527568FD8C5D4D989E79C578948A26BFE2A2BD4E68C10EB33D0493B2506BEC7C11A5251F2A037DC68DF9288EF07793003560CB53B051414355A17715A698B0EEB092A1C44AE452238E5D6A62F9EEC743D6F2E76C9FC21E6F817F6256668EFA1A4A1543A8C4B028206CDF9A31210C8B3521C54315019038DA6B856767AFA54B0A98ED2C83A8C81CA29D2920076FC154456B98D7641B8311219F8D575F51D9E124830FDFA6B115708C4C9E6877AC53210AF541B5877662E48EB4E48707C8C2F7D06828766C4BD391212D2FA718AE823B424A9142B09F03EB0B8DB50EA76DFE3FBA5A69628B46F8B70D3FCBCF56A89219DEDE80932DFB3265FB9CA9A2611D4208BEBF142C0BDB79266568CC983F955CFF9142BE2A53BC1B19EBE405786B8CF11815F2477C0369154E6A6EDA351E33493CC3C3CAC283FC68505C10259CEE81C4247D75CDE867A05281DF0F0B7E09781BB71B9A9247A8502D32214C962D60CF3DA92DB9067FB4C326D8A7FDF42CF5EEEF2098FA99906792A8D5C9262964A738F24DF5E04AB3537675360A5F8709EE993108889C0AE9D75D7FF08A11F507A64F34828B8EBB7B9E068D01379E746BB7816C1F02AC6B07E87205DCCBB01192AAF07A4D787AB947215B51A12E3047AFA55BCC367EFDD9959D03D136AFB00417D4B39B752AC326AB7630E86D5FB133DAE21297112D28DAFF0DBF9BDEB28C679F5C9319250BE9DC9049BA7E12136639E80ACDD023D678C9EFCF9DF22A151A7AB087C22E5DF51A086923C630CEFD87E8EE7D4BA02A261AAE01734005633DCD24DBEB44CB9F7C37B758DE7C19CB56BA208B27E396A107AA054974C55121FA25DEA4AE07C86459F0611B6F30849F92EA0E39FE69EE4AAAB435D5FDDA0C3BC49CACC79D591D0DC48B1F0EFDE826AD58094199815F611E06EC774C9502F64D9830F1EB3463D3D90F1AB7A5CAD6F8D4BDFD1FD9EF7EAB751D7A6279166EBC92B210F3197661C26C9F2BD99873344F38FD48D03CCFBB0C96E5F64B2DDB5A1002DE42DD9BE7F19026F19E3B926282BF62304E0BC3D1EC57C778417A757ABDCEE1522A87B6D5795B3F648E10DCB30B90843EF0BC15BD6C11E94E55C7F966EB994AA1AB4677F8CEF88E9999B0B2CC8AB56CCDF6FFB3A0247FAA0821DF17FD9C6AAA2C3C2194BB309264B53760204135A55AE0F4D0A4FBE6A27A3937587E0CD77D9BDAD9230EDFC64D4FD2848D2893DFAB1B034527611BAA901B08300424B7EA4FB887DC1D16C336521BD6444693C38BCD2C666C67D92C012DF7E147EAA7B53F8E39862032B13106E2D4DF06C8F7B3C15BF6B56E1F9F4CA0F634C837D7CB977CC85F4432F2C1312607443877033464C48D117F74139D95632EEE9C619CD4CEB954397A1755839A5C57C452D9EB44F2F0BBBF27CE8253CC07AA96565D615
E11D8E7E02E58D019B81A7C5FB00FBE5F58E3BA6E93DCC0507E489ECAC0BB79299796ACA7AB4559BC9C1766A31EF6E085A82B72A9844A853E0E669951A5EA0E03758F5D4A4484BEB5BE7A1FEC9541BB7CC3ED12EC3F6B7FEF5A3DAE485EA33FBC95EECE47E23D2DC5342820D6BAE410AE99D7931311B0CEA18739620BF0BA848C1A5732D393441464566F748F5C3E8F3F843743EA676B2B1C333B9DDF43EFC6E163EEC78999F2700962B20E7D19DEAC166AFC7EE8F6627594624C677EFA9B7D42F9294FB450F9F7CC009B7A2457442597BDF5EB9D02B9B46A2EFD307A635FD277D5B516956921C1CA84C1EF7216252D44A04CCF5A1003835E23E689167C8942778C3F0FD65927FD1A9DE750ACE57AD7FBEEE9F405FB61EEDA19261227D3E54EA5C42A7809A041710AF9C1014CF880A2F61C9010EC61D731E647C66FFC7C6122E8542D7E14100C146A35A7666251A9D1479251E28FB8D80FC077871974CC7202908E7E0022C551913F7EE55D69DC94931C28EA979342D50429CF5E55DFB5937755227763A73502C440537C8929ADBFDB19341CFDB43D8B404F67DE250CA729A5BA17E10AB152752C7130CFDADD3ACB43A658A748B771A48E9EC2C2D291E3529A1AEB779D20F91B022A060CC365DC44675A50E47A175930AAE9CC9FCE4EA18678772A3EBE84C2E352808860584B6DA480288BDD1B700035DD1589D9AFAAA4C0BC2836530F665339478C8581B1F71F4119A9D6405CE2F9C2C3AC35CE56645AE1C1F096A7ED808665240BECAAFBECB85DC4FEE77DCA2F0A88C26590E8F1B4B20583C3E14DA487CC88EE01E6D5506D712F1F3390BC18E9149CEC7B618595191754C1D26A5AA6CFE023C5F0F7701AB97C60AA7181ED70E54E4B0F03683A624EB4FA08C78FACC85FDB6E8D77A097F0D7F3896F7C8094F0D507A8A2E2BA8DBA83E2D4FB3D2C81BC13D01819F268A3679A306A4C42EC3B2C9D1FA178D83F0788858158184DDED4B6938EFBC04C23886DD9A85F106A638B0C709E0B9A7A1718878C02760499EAE0619E60CE5A24CB265C3C3B3D4D4092A60A1115F5706E3F8BA3EE60DC66AA86CA5CAC95E49012F363432AB67DFAB873F4E58120969D89ED184072A2CC86BE7EEC00E73DF061666FD92989A5D2C4C8FBB885EF4351801267D8A691705385848EB9DE269F77B36CFC26786D90C4FE881CD775C001401D30A7944A84AFCE10432CB09B4C1B670FB2119DC70B52C6223CFDABB5156B5223BE2F0322EEBA8FE17700CBE7A4B53614930A7DDD7AF68FEC572795EA06EC9DA469C1DCE28B75A6A79BEE482EEE404BEDF10965ED75407A0D6BB114C0531FBE8FCC93A0B1F0F679DAFF76D1C5F42B6E2EF0F1345648E79A84EB580DFA594C48B5AE1B7D3C9B836AB9D728F7E9019A59F413534FB79B5261ED80F21005C11954ADBBA9F302D7B989770

F8CA82B57AA54DA6242D543EA07EA14A51FB3CC3672B6116B899E63DCFB5C2F49218B2D6405C5B65E285348A716475C844ACD3A9A75AE4CD0E5A3844B27078000451258847100FF8CA0582808832472A2DC055B6E5EF3EA41F69E8100BCED0B93D8D55816AAE39D4BBC76CF73AE6800BCBB9D8A2409654D61132988DD5F5185BAF9B9E5DDCFE9329AAB3ED641A20FF1E58F3A5E920CCBADA3C44B53357B2344C0AE5F79FA70828C425F52C3AF3FFB0B217F39FDC17A81A20073E2C44E8E20DB815009C0F0A0A895E401B108A086768234A332CE16D6652878B75960ABA6DBDF84E49F8E076E9F624FD09350357E1FDDD20973E908D89DE8C6CF63A99208CEF0BE2116B1F7052B9A55B9D0622317440E325529A0EB9A9BE60EA1CAF37370D47CAEDB5F582C3D418FDC424F0B0035176812CF84690DDFCE9EBC06ABFD64D58DC0880517F900C2AAF46DA143FB734F05C48CE3668C71A7AD7572F62295F77AE2977C80220D767A7706A5C6F63AFC34AE2ED01547A6C1EAA57A0F40D0722F397AE354D4B247BA69D3C81BBD76C7B90DC9B77D30F275FA2A15CA41BB57A239658AD9B6383CAE463B1CC92E0D6B9DC1933AD12890973F1980490E79274A02256C3A1F0F8EA0ABA86693672301775CD67E9F2BA76498A42D3417D35F0F7918AD55D4452337349A2ACD16542C28460CD38B68D520CB5E37510C55AD9DFCDF97108DBD486919055CC69049A67DA244C698AED4B0ABCA8A0BD4180FEF4B5842D00097DCAADB85E39ADF85DED80B3229EAED3EF9FFD6DC404B2A90CD8BCE407DFE4ABA579C68719BC1C7AF11DD52DF2CEFFC7FEA08D354679FAD6EAE8C98A15C47E05008715F4ECE40BF7964A6EF38D8D9A22DA51C9E617574ED4E8FFDF7837A1C0BFB846F749341E6970787F1B5E6C5F61C13D7F420EC6AFF5FE306E73569BE590E81489D1975D1AD7F9DF45CE603445EB2B99AEB30E250B0A0F8078FD788A7243AB8FA72372528E8880725F39E1852F18263A58F91326FB2C08C1C673184D091D52F42C6848D0ABA429F1F0A5F3E506F94942F7D274B37459DEB2E21411FC99B7D8304103DAC2CD7F20EC07ACA66D96239204DF36AB7BCE44CEAEE0CDC8AC19F4760ECBDBAB466927172076112260C8720AC92DE353168E7ED235D4D16978673326564A03EB0D1817FAF13DAB5038CBA142519F2F81CA4CDDEEC415947E4AC62897C9FE0E068C25D47D636F22E390B17C84D4FE606C0602C25FB544CDC4D1CC7FEBF641B23E978DA557383D874AEECC9F7B73443ED11E81BA8AD8520422379542F7C11DD2B5591484B9783D4F92DB059721FA4F3C900EC46F0D0F005D5CD7A696C9B823921A5B47D936B22770557501836B4CB7E52666628A0D4DFBC47B3F124E62ACF566328C41C5515320AA75E3CA08CB5C96208D07A1374C2CB39831D40CFD647CE852
ECA326B758FEDD8D5A290BFA298027CA088799CB5B91B30A024E004744B638915CDA7EBE9EB25113DB8FF41C6C05E35C067ABA6EA06E81E5EE97D2CF59E4A0EA65945AC4DF7C63F770F2F335DD09AFA97C00D3171766B01674FF79B0C843B2C37CF0A92A386E09E3EA9E9C3A5EBD97836845AA0F676C77BD970ED9D7125A2BF1B0D7D5D4283FD017EC392BCB3687C3160CA615B8C3DACF4E57190DF25B61DF20D0563712486BC46899A90567807536B81AE9A9E62E21B7949425B76A8968E69290773662A2722B67D2D492CDA840D5C6AE973E91714997423BB6C669281D10736819ECB9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Light cguidfix
/F1.1/HelveticaNeue-Light renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 160.75 127.75 rc
38.75 121.625 m
50 127.25 l
72.5 127.25 l
83.75 121.625 l
72.5 116 l
50 116 l
h
38.75 121.625 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
288 175.5 m
333 153 l
423 153 l
468 175.5 l
423 198 l
333 198 l
h
288 175.5 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 61.25 121.625 cm
/F1.1[ 14 0 0 -14 0 0]sf
-12.187 -3.4060974 m
(!!"#)[ 8.820000 8.820000 6.734000 0.000000 ] xS
-36.435001 14 m
($%&'\(\)%*'+,)[ 9.856000 6.482000 8.036000 7.784000 4.144000 7.518000 6.482000 4.158000 7.784000 2.590000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
378 198 m
378 233.10001 l
S
0 i
CM
61.25 105.225 m
62 107.225 l
60.5 107.225 l
h
61.25 105.225 m
f
0 J
0 j
0.25 0 0 -0.25 -33.25 165.5 cm
378 241.10001 m
381 233.10001 l
375 233.10001 l
h
378 241.10001 m
S
1 1 1 sc
CM
50 102.95 m
51.799999 104.75 l
70.699997 104.75 l
72.5 102.95 l
72.5 97.550003 l
70.699997 95.75 l
51.799999 95.75 l
50 97.550003 l
h
50 102.95 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
333 250.2 m
340.20001 243 l
415.79999 243 l
423 250.2 l
423 271.79999 l
415.79999 279 l
340.20001 279 l
333 271.79999 l
h
333 250.2 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 61.25 100.25 cm
-13.23 5.2969513 m
(-!$)[ 7.784000 8.820000 0.000000 ] xS
/Cs1 SC
0.64705902 0.64705902 0.64705902 sc
CM
92.75 104.75 m
128.75 104.75 l
128.75 95.75 l
92.75 95.75 l
h
92.75 104.75 m
f
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
504 243 m
648 243 l
648 279 l
504 279 l
h
504 243 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 110.75 100.25 cm
-49.272999 -3.4060974 m
(.'\(#$%&'\(\)%*'+,)[ 9.856000 7.784000 4.144000 3.892000 9.856000 6.482000 8.036000 7.784000 4.144000 7.518000 6.482000 4.158000 7.784000 2.590000 0.000000 ] xS
-63.433998 14 m
(/'*0#*1*23%0#425'6,1*%7)[ 3.374000 7.784000 3.122000 3.892000 3.892000 4.410000 7.266000 4.158000 7.266000 2.590000 5.194000 3.892000 3.892000 6.734000 7.266000 7.266000 7.784000 7.518000 8.036000 7.266000 4.410000 6.482000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
423 261 m
477 261 l
494.10001 261 l
S
0 i
CM
92.275002 100.25 m
90.275002 101 l
90.275002 99.5 l
h
92.275002 100.25 m
f
0 J
0 j
0.25 0 0 -0.25 -33.25 165.5 cm
502.10001 261 m
494.10001 258 l
494.10001 264 l
h
502.10001 261 m
S
/Cs2 SC
0 sc
0.25 0 0 -0.25 81.950089 100.25 cm
-5.0539999 -3.2030487 m
(63)[ 7.518000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
378 279 m
378 301.5 l
378 314.10001 l
S
0 i
CM
61.25 84.974998 m
62 86.974998 l
60.5 86.974998 l
h
61.25 84.974998 m
f
0 J
0 j
0.25 0 0 -0.25 -33.25 165.5 cm
378 322.10001 m
381 314.10001 l
375 314.10001 l
h
378 322.10001 m
S
/Cs2 SC
0 sc
0.25 0 0 -0.25 77 90.125 cm
-58 -3.4060974 m
(81*92,3%#232:1\(2,)[ 11.662000 7.266000 4.410000 7.000000 7.266000 8.036000 2.590000 6.482000 3.892000 7.266000 2.590000 7.266000 6.482000 7.266000 4.144000 7.266000 0.000000 ] xS
-58 14 m
(/;<=#>?@8A7)[ 3.374000 8.400000 7.784000 7.784000 3.892000 7.518000 9.590000 4.662000 11.662000 7.518000 0.000000 ] xS
/Cs1 SC
0.40784299 0.73725498 0.21176501 sc
CM
2.75 104.75 m
29.75 104.75 l
29.75 95.75 l
2.75 95.75 l
h
2.75 104.75 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
144 243 m
252 243 l
252 279 l
144 279 l
h
144 243 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 16.25 100.25 cm
-32.025002 -3.4060974 m
(!BC53+6+513)[ 8.820000 7.518000 8.036000 7.266000 2.590000 2.590000 7.518000 2.590000 7.266000 7.266000 0.000000 ] xS
-38.381001 14 m
($%&2*\(\)%*'+,)[ 9.856000 6.482000 8.036000 7.266000 4.410000 4.144000 7.518000 6.482000 4.158000 7.784000 2.590000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
333 261 m
288 261 l
261.89999 261 l
S
0 i
CM
30.225 100.25 m
32.224998 99.5 l
32.224998 101 l
h
30.225 100.25 m
f
0 J
0 j
0.25 0 0 -0.25 -33.25 165.5 cm
253.89999 261 m
261.89999 264 l
261.89999 258 l
h
253.89999 261 m
S
/Cs2 SC
0 sc
0.25 0 0 -0.25 41.502823 100.25 cm
-12.439 -3.4060974 m
(8+3,#)[ 11.662000 2.590000 2.590000 8.036000 0.000000 ] xS
-26.452999 14 m
(232:1\(+'6)[ 7.266000 2.590000 7.266000 6.482000 7.266000 4.144000 2.590000 7.784000 0.000000 ] xS
/Cs1 SC
0.40784299 0.73725498 0.21176501 sc
CM
50 84.5 m
72.5 84.5 l
72.5 75.5 l
50 75.5 l
h
50 84.5 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
333 324 m
423 324 l
423 360 l
333 360 l
h
333 324 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 61.25 80 cm
-22.82 -3.4060974 m
(D*+81*%#)[ 8.820000 4.410000 2.590000 11.662000 7.266000 4.410000 6.482000 0.000000 ] xS
-38.381001 14 m
($%&2*\(\)%*'+,)[ 9.856000 6.482000 8.036000 7.266000 4.410000 4.144000 7.518000 6.482000 4.158000 7.784000 2.590000 0.000000 ] xS
/Cs1 SC
0.58823502 0.384314 0.81568599 sc
CM
0.5 125 m
32 125 l
32 116 l
0.5 116 l
h
0.5 125 m
f
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
135 162 m
261 162 l
261 198 l
135 198 l
h
147.60001 162 m
147.60001 198 l
248.39999 198 m
248.39999 162 l
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 16.25 120.5 cm
-7.2589998 -3.4060974 m
(-"#)[ 7.784000 6.734000 0.000000 ] xS
-39.291 14 m
(E'6\(*':2*4+13)[ 9.856000 7.784000 7.518000 4.144000 4.158000 7.784000 6.482000 7.266000 4.410000 6.734000 2.590000 7.266000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
198 243 m
198 220.5 l
198 207.89999 l
S
0 i
CM
16.25 115.525 m
15.5 113.525 l
17 113.525 l
h
16.25 115.525 m
f
0 J
0 j
0.25 0 0 -0.25 -33.25 165.5 cm
198 199.89999 m
195 207.89999 l
201 207.89999 l
h
198 199.89999 m
S
1 1 1 sc
CM
50 62.450001 m
51.799999 64.25 l
70.699997 64.25 l
72.5 62.450001 l
72.5 57.049999 l
70.699997 55.25 l
51.799999 55.25 l
50 57.049999 l
h
50 62.450001 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
333 412.20001 m
340.20001 405 l
415.79999 405 l
423 412.20001 l
423 433.79999 l
415.79999 441 l
340.20001 441 l
333 433.79999 l
h
333 412.20001 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 61.25 59.75 cm
-18.284 5.2969513 m
(F'+\(2*)[ 10.374000 7.784000 2.590000 4.144000 7.266000 0.000000 ] xS
/Cs1 SC
0.40784299 0.73725498 0.21176501 sc
CM
50 41.75 m
72.5 41.75 l
72.5 32.75 l
50 32.75 l
h
50 41.75 m
f
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
333 495 m
423 495 l
423 531 l
333 531 l
h
333 495 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 61.25 37.25 cm
-37.205002 -3.4060974 m
($14\)+8'\('G4#)[ 9.856000 7.266000 6.734000 7.518000 2.590000 11.662000 7.784000 4.144000 7.784000 2.338000 6.734000 0.000000 ] xS
-30.205 14 m
(-\)%*'+,+\(+4)[ 7.784000 7.518000 6.482000 4.158000 7.784000 2.590000 8.036000 2.590000 4.144000 2.590000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
378 360 m
378 382.5 l
378 395.10001 l
S
0 i
CM
61.25 64.724998 m
62 66.724998 l
60.5 66.724998 l
h
61.25 64.724998 m
f
0 J
0 j
0.25 0 0 -0.25 -33.25 165.5 cm
378 403.10001 m
381 395.10001 l
375 395.10001 l
h
378 403.10001 m
S
1 J
1 j
0.60000002 i
378 441 m
378 468 l
378 485.10001 l
S
0 i
CM
61.25 42.224998 m
62 44.224998 l
60.5 44.224998 l
h
61.25 42.224998 m
f
0 J
0 j
0.25 0 0 -0.25 -33.25 165.5 cm
378 493.10001 m
381 485.10001 l
375 485.10001 l
h
378 493.10001 m
S
/Cs2 SC
0 sc
0.25 0 0 -0.25 68 49.625 cm
-22 5.2969513 m
(H)s
/Cs1 SC
0.58823502 0.384314 0.81568599 sc
CM
29.75 19.25 m
61.25 19.25 l
61.25 10.25 l
29.75 10.25 l
h
29.75 19.25 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
252 585 m
378 585 l
378 621 l
252 621 l
h
264.60001 585 m
264.60001 621 l
365.39999 621 m
365.39999 585 l
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 45.5 14.75 cm
-28.917 5.2969513 m
(-\)%*'"+62)[ 7.784000 7.518000 6.482000 4.158000 7.784000 6.734000 2.590000 7.518000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
78.462502 19.25 m
95.787498 19.25 l
97.8368 19.25 99.5 17.233999 99.5 14.75 c
99.5 12.266 97.8368 10.25 95.787498 10.25 c
78.462502 10.25 l
76.4132 10.25 74.75 12.266 74.75 14.75 c
74.75 17.233999 76.4132 19.25 78.462502 19.25 c
f
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
446.85001 585 m
516.15002 585 l
524.34723 585 531 593.06403 531 603 c
531 612.93597 524.34723 621 516.15002 621 c
446.85001 621 l
438.6528 621 432 612.93597 432 603 c
432 593.06403 438.6528 585 446.85001 585 c
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 87.125 14.75 cm
-13.23 -3.4060974 m
(-!$)[ 7.784000 8.820000 0.000000 ] xS
-31.808001 14 m
(I'6+\('*+6J)[ 11.494000 7.784000 7.518000 2.590000 4.144000 7.784000 4.410000 2.590000 7.518000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
378 531 m
378 558 l
346.5 558 l
315 558 l
315 575.09998 l
S
0 i
CM
45.5 19.725 m
46.25 21.725 l
44.75 21.725 l
h
45.5 19.725 m
f
0 J
0 j
0.25 0 0 -0.25 -33.25 165.5 cm
315 583.09998 m
318 575.09998 l
312 575.09998 l
h
315 583.09998 m
S
1 J
1 j
0.60000002 i
342.31116 621 m
358.91486 630 381.41486 639 405 639 c
423.97867 639 440.06931 633.1723 452.52359 626.20636 c
S
0 i
CM
81.580772 10.000089 m
79.485367 9.5856314 l
80.274559 8.3100252 l
h
81.580772 10.000089 m
f
0 J
0 j
0.25 0 0 -0.25 -33.25 165.5 cm
459.32309 621.99963 m
450.94147 623.65747 l
454.09824 628.75989 l
h
459.32309 621.99963 m
S
1 J
1 j
0.60000002 i
460.93884 585 m
447.71014 576 428.58514 567 405 567 c
385.36951 567 366.49078 573.23486 351.13791 580.5152 c
S
0 i
CM
52.751259 19.465164 m
54.874035 19.702475 l
54.194572 21.039759 l
h
52.751259 19.465164 m
f
0 J
0 j
0.25 0 0 -0.25 -33.25 165.5 cm
344.00504 584.13934 m
352.49615 583.19012 l
349.77829 577.84094 l
h
344.00504 584.13934 m
S
/Cs2 SC
0 sc
0.25 0 0 -0.25 68 3.5 cm
-29.176001 5.2969513 m
(K<#L2294)[ 8.036000 7.784000 3.892000 10.374000 7.266000 7.266000 7.000000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
531 603 m
560.25 603 l
584.09998 603 l
S
0 i
CM
114.775 14.75 m
112.775 15.5 l
112.775 14 l
h
114.775 14.75 m
f
0 J
0 j
0.25 0 0 -0.25 -33.25 165.5 cm
592.09998 603 m
584.09998 600 l
584.09998 606 l
h
592.09998 603 m
S
0.40784299 0.73725498 0.21176501 sc
CM
115.25 19.25 m
137.75 19.25 l
137.75 10.25 l
115.25 10.25 l
h
115.25 19.25 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
594 585 m
684 585 l
684 621 l
594 621 l
h
594 585 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 126.5 14.75 cm
-14.399 -3.4060974 m
(D''*#)[ 8.820000 7.784000 7.784000 4.410000 0.000000 ] xS
-35.917 14 m
(E'8&3+1652)[ 9.856000 7.784000 11.662000 8.036000 2.590000 2.590000 7.266000 7.518000 7.266000 0.000000 ] xS
/Cs1 SC
0.40784299 0.73725498 0.21176501 sc
CM
115.25 28.25 m
137.75 28.25 l
137.75 19.25 l
115.25 19.25 l
h
115.25 28.25 m
f
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
594 549 m
684 549 l
684 585 l
594 585 l
h
594 549 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 126.5 23.75 cm
-32.039001 5.2969513 m
(D*2J6165%)[ 8.820000 4.158000 7.266000 7.784000 7.518000 7.266000 7.518000 7.266000 0.000000 ] xS
/Cs1 SC
0.40784299 0.73725498 0.21176501 sc
CM
115.25 10.25 m
137.75 10.25 l
137.75 1.25 l
115.25 1.25 l
h
115.25 10.25 m
f
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
594 621 m
684 621 l
684 657 l
594 657 l
h
594 621 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 126.5 5.75 cm
-14.651 -3.4060974 m
(M*BJ#)[ 9.590000 4.410000 7.518000 7.784000 0.000000 ] xS
-31.507 14 m
(N6\(2*15\(+'6)[ 3.108000 7.518000 4.144000 7.266000 4.410000 7.266000 7.266000 4.144000 2.590000 7.784000 0.000000 ] xS
0.25 0 0 -0.25 106.51652 14.75 cm
-17.507 -3.2030487 m
(O1+3B*2)[ 3.626000 7.266000 2.590000 2.590000 7.518000 4.158000 0.000000 ] xS
/Cs1 SC
0.40784299 0.73725498 0.21176501 sc
CM
135.5 84.5 m
160.25 84.5 l
160.25 75.5 l
135.5 75.5 l
h
135.5 84.5 m
f
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
675 324 m
774 324 l
774 360 l
675 360 l
h
675 324 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 147.875 80 cm
-38.164001 -3.4060974 m
(-"#'O#I'\(\)2*#)[ 7.784000 6.734000 3.892000 7.784000 3.626000 3.892000 11.494000 7.784000 4.144000 7.518000 7.266000 4.410000 0.000000 ] xS
-44.071999 14 m
(L@\(\)+'618+,24)[ 10.374000 4.662000 4.144000 7.518000 2.590000 7.784000 7.518000 7.266000 11.662000 2.590000 8.036000 7.266000 0.000000 ] xS
/Cs1 SC
0.40784299 0.73725498 0.21176501 sc
CM
135.5 93.5 m
160.25 93.5 l
160.25 84.5 l
135.5 84.5 l
h
135.5 93.5 m
f
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
675 288 m
774 288 l
774 324 l
675 324 l
h
675 288 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 147.875 89 cm
-22.176001 -3.4060974 m
(-\)%*'+,#)[ 7.784000 7.518000 6.482000 4.158000 7.784000 2.590000 8.036000 0.000000 ] xS
-34.348999 14 m
(M%4J2624+4)[ 9.590000 6.482000 6.734000 7.784000 7.266000 7.518000 7.266000 6.734000 2.590000 0.000000 ] xS
/Cs1 SC
0.40784299 0.73725498 0.21176501 sc
CM
135.5 75.5 m
160.25 75.5 l
160.25 66.5 l
135.5 66.5 l
h
135.5 75.5 m
f
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
675 360 m
774 360 l
774 396 l
675 396 l
h
675 360 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 147.875 71 cm
-18.150999 -3.4060974 m
(N',+62#)[ 3.108000 7.784000 8.036000 2.590000 7.518000 7.266000 0.000000 ] xS
-30.73 14 m
(M2P5+265%)[ 9.590000 7.266000 6.216000 7.266000 2.590000 7.266000 7.518000 7.266000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
95 82.699997 m
96.800003 84.5 l
115.7 84.5 l
117.5 82.699997 l
117.5 77.300003 l
115.7 75.5 l
96.800003 75.5 l
95 77.300003 l
h
95 82.699997 m
f
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
513 331.20001 m
520.20001 324 l
595.79999 324 l
603 331.20001 l
603 352.79999 l
595.79999 360 l
520.20001 360 l
513 352.79999 l
h
513 331.20001 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 106.25 80 cm
-18.284 5.2969513 m
(F'+\(2*)[ 10.374000 7.784000 2.590000 4.144000 7.266000 0.000000 ] xS
/Cs1 SC
0.40784299 0.73725498 0.21176501 sc
CM
92.75 64.25 m
119.75 64.25 l
119.75 55.25 l
92.75 55.25 l
h
92.75 64.25 m
f
0.60000002 i
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
504 405 m
612 405 l
612 441 l
504 441 l
h
504 405 m
S
/Cs2 SC
0 sc
0 i
0.25 0 0 -0.25 106.25 59.75 cm
-46.816002 -3.4060974 m
(Q5\('&+5#-\)%*'+,#)[ 8.302000 7.266000 4.144000 7.784000 8.036000 2.590000 7.266000 3.892000 7.784000 7.518000 6.482000 4.158000 7.784000 2.590000 8.036000 0.000000 ] xS
-19.481001 14 m
(-+44B2)[ 8.120000 2.590000 6.734000 6.734000 7.518000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
558 360 m
558 382.5 l
558 395.10001 l
S
0 i
CM
106.25 64.724998 m
107 66.724998 l
105.5 66.724998 l
h
106.25 64.724998 m
f
0 J
0 j
0.25 0 0 -0.25 -33.25 165.5 cm
558 403.10001 m
561 395.10001 l
555 395.10001 l
h
558 403.10001 m
S
/Cs2 SC
0 sc
0.25 0 0 -0.25 122 72.125 cm
-58 5.2969513 m
(R)s
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
0.25 0 0 -0.25 -33.25 165.5 cm
603 342 m
641.25 342 l
665.09998 342 l
S
0 i
CM
135.02499 80 m
133.02499 80.75 l
133.02499 79.25 l
h
135.02499 80 m
f
0 J
0 j
0.25 0 0 -0.25 -33.25 165.5 cm
673.09998 342 m
665.09998 339 l
665.09998 345 l
h
673.09998 342 m
S
1 J
1 j
0.60000002 i
423 342 m
468 342 l
503.10001 342 l
S
0 i
CM
94.525002 80 m
92.525002 80.75 l
92.525002 79.25 l
h
94.525002 80 m
f
0 J
0 j
0.25 0 0 -0.25 -33.25 165.5 cm
511.10001 342 m
503.10001 339 l
503.10001 345 l
h
511.10001 342 m
S
/Cs2 SC
0 sc
0.25 0 0 -0.25 82.670792 80 cm
-14 -3.2030487 m
(5\)+3,)[ 7.266000 7.518000 2.590000 2.590000 0.000000 ] xS
0.25 0 0 -0.25 68 69.875 cm
-22 5.2969513 m
(1,B3\()[ 7.266000 8.036000 7.518000 2.590000 0.000000 ] xS
0.25 0 0 -0.25 125.71767 80 cm
-2.5899999 -3.2030487 m
(S)s
ep
end
%%Trailer
%%EOF
